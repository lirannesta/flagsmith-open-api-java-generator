{"swagger": "2.0", "info": {"title": "Flagsmith API", "description": "", "contact": {"email": "support@flagsmith.com"}, "license": {"name": "BSD License"}, "version": "v1"}, "host": "api.flagsmith.com", "schemes": ["https"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Private": {"type": "apiKey", "in": "header", "name": "Authorization", "description": "Every time you create a new Project Environment, an environment API key is automatically generated for you. This is all you need to pass in to get access to Flags etc. <br />Example value: <br />Token 884b1b4c6b4ddd112e7a0a139f09eb85e8c254ff"}, "Public": {"type": "apiKey", "in": "header", "name": "X-Environment-Key", "description": "Things like creating new flags, environments, toggle flags or indeed anything that is possible from the administrative front end. <br />Example value: <br />FFnVjhp7xvkT5oTLq4q788"}}, "security": [{"Private": []}, {"Public": []}], "paths": {"/api/v1/analytics/flags/": {"post": {"operationId": "api_v1_analytics_flags_create", "description": "Send flag evaluation events from the SDK back to the API for reporting.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["api"]}, "parameters": []}, "/api/v1/analytics/telemetry/": {"post": {"operationId": "api_v1_analytics_telemetry_create", "description": "Class to handle telemetry events from self hosted APIs so we can aggregate and track\nself hosted installation data", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Telemetry"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Telemetry"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/audit/": {"get": {"operationId": "api_v1_audit_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "project", "in": "query", "description": "ID of the project to filter on", "type": "integer"}, {"name": "environment", "in": "query", "description": "ID of the environment to filter on (Note `id` required, not `api_key`)", "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AuditLog"}}}}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/code/request/": {"post": {"operationId": "api_v1_auth_code_request_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RequestMFAMethodCode"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/RequestMFAMethodCode"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/login/": {"post": {"operationId": "api_v1_auth_login_create", "description": "Class to handle throttling for login requests", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Login"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Login"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/login/code/": {"post": {"operationId": "api_v1_auth_login_code_create", "description": "Override class to add throttling", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CodeLogin"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CodeLogin"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/logout/": {"post": {"operationId": "api_v1_auth_logout_create", "description": "Use this endpoint to logout user (remove user authentication token).", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/mfa/change-primary-method/": {"post": {"operationId": "api_v1_auth_mfa_change-primary-method_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ChangePrimaryMethod"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ChangePrimaryMethod"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/mfa/config/": {"get": {"operationId": "api_v1_auth_mfa_config_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/mfa/user-active-methods/": {"get": {"operationId": "api_v1_auth_mfa_user-active-methods_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/oauth/github/": {"post": {"operationId": "api_v1_auth_oauth_github_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/GithubLogin"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CustomToken"}}, "502": {"description": "", "schema": {"$ref": "#/definitions/Error"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/oauth/google/": {"post": {"operationId": "api_v1_auth_oauth_google_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/GoogleLogin"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CustomToken"}}, "502": {"description": "", "schema": {"$ref": "#/definitions/Error"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/saml/configuration/": {"post": {"operationId": "api_v1_auth_saml_configuration_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SamlConfiguration"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SamlConfiguration"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/saml/configuration/{organisation_name}/": {"get": {"operationId": "api_v1_auth_saml_configuration_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SamlConfiguration"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_auth_saml_configuration_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SamlConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SamlConfiguration"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_auth_saml_configuration_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SamlConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SamlConfiguration"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_auth_saml_configuration_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "organisation_name", "in": "path", "required": true, "type": "string"}]}, "/api/v1/auth/saml/login/": {"post": {"operationId": "api_v1_auth_saml_login_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SamlLogin"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SamlUserToken"}}, "401": {"description": "", "schema": {"$ref": "#/definitions/Error"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/saml/{organisation_name}/metadata/": {"get": {"operationId": "api_v1_auth_saml_metadata_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "produces": ["application/json", "application/xml"], "tags": ["api"]}, "parameters": [{"name": "organisation_name", "in": "path", "required": true, "type": "string"}]}, "/api/v1/auth/saml/{organisation_name}/request/": {"post": {"operationId": "api_v1_auth_saml_request_create", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SamlRequest"}}}, "tags": ["api"]}, "parameters": [{"name": "organisation_name", "in": "path", "required": true, "type": "string"}]}, "/api/v1/auth/saml/{organisation_name}/response/": {"post": {"operationId": "api_v1_auth_saml_response_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "organisation_name", "in": "path", "required": true, "type": "string"}]}, "/api/v1/auth/token/": {"delete": {"operationId": "api_v1_auth_token_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/users/": {"get": {"operationId": "api_v1_auth_users_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/User"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_auth_users_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CustomUserCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CustomUserCreate"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/users/activation/": {"post": {"operationId": "api_v1_auth_users_activation", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Activation"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Activation"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/users/me/": {"get": {"operationId": "api_v1_auth_users_me_read", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/SamlCurrentUser"}}}}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_auth_users_me_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SamlCurrentUser"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SamlCurrentUser"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_auth_users_me_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SamlCurrentUser"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SamlCurrentUser"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_auth_users_me_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/users/resend_activation/": {"post": {"operationId": "api_v1_auth_users_resend_activation", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SendEmailReset"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SendEmailReset"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/users/reset_email/": {"post": {"operationId": "api_v1_auth_users_reset_username", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SendEmailReset"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SendEmailReset"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/users/reset_email_confirm/": {"post": {"operationId": "api_v1_auth_users_reset_username_confirm", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UsernameResetConfirm"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/UsernameResetConfirm"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/users/reset_password/": {"post": {"operationId": "api_v1_auth_users_reset_password", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SendEmailReset"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SendEmailReset"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/users/reset_password_confirm/": {"post": {"operationId": "api_v1_auth_users_reset_password_confirm", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PasswordResetConfirmRetype"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PasswordResetConfirmRetype"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/users/set_email/": {"post": {"operationId": "api_v1_auth_users_set_username", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SetUsername"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SetUsername"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/users/set_password/": {"post": {"operationId": "api_v1_auth_users_set_password", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SetPasswordRetype"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SetPasswordRetype"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/auth/users/{id}/": {"get": {"operationId": "api_v1_auth_users_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_auth_users_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_auth_users_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_auth_users_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Feature flag admin user.", "required": true, "type": "integer"}]}, "/api/v1/auth/{method}/activate/": {"post": {"operationId": "api_v1_auth_activate_create", "description": "View handling new MFA method activation requests.\nIf validation passes, new MFAMethod (inactive) object\nis created.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "method", "in": "path", "required": true, "type": "string"}]}, "/api/v1/auth/{method}/activate/confirm/": {"post": {"operationId": "api_v1_auth_activate_confirm_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "method", "in": "path", "required": true, "type": "string"}]}, "/api/v1/auth/{method}/codes/regenerate/": {"post": {"operationId": "api_v1_auth_codes_regenerate_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "method", "in": "path", "required": true, "type": "string"}]}, "/api/v1/auth/{method}/deactivate/": {"post": {"operationId": "api_v1_auth_deactivate_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "method", "in": "path", "required": true, "type": "string"}]}, "/api/v1/cb-webhook/": {"post": {"operationId": "api_v1_cb-webhook_create", "summary": "Endpoint to handle webhooks from chargebee.", "description": "- If subscription is active, check to see if plan has changed and update if so. Always update cancellation date to\n   None to ensure that if a subscription is reactivated, it is updated on our end.\n\n - If subscription is cancelled or not renewing, update subscription on our end to include cancellation date and\n   send alert to admin users.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["api"]}, "parameters": []}, "/api/v1/e2etests/update-seats/": {"put": {"operationId": "api_v1_e2etests_update-seats_update", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["api"]}, "parameters": []}, "/api/v1/environment-document/": {"get": {"operationId": "api_v1_environment-document_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["api"]}, "parameters": []}, "/api/v1/environments/": {"get": {"operationId": "api_v1_environments_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "project", "in": "query", "description": "ID of the project to filter by.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/EnvironmentSerializerWithMetadata"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateUpdateEnvironment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateEnvironment"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/environments/environments/{environment_api_key}/edge-identities-featurestates": {"put": {"operationId": "api_v1_environments_environments_edge-identities-featurestates_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EdgeIdentityWithIdentifierFeatureStateRequestBody"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EdgeIdentityFeatureState"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_environments_edge-identities-featurestates_delete", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EdgeIdentityWithIdentifierFeatureStateDeleteRequestBody"}}], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/permissions/": {"get": {"operationId": "api_v1_environments_permissions", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PermissionModel"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/environments/{api_key}/": {"get": {"operationId": "api_v1_environments_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EnvironmentSerializerWithMetadata"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_environments_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateUpdateEnvironment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateEnvironment"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_environments_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateUpdateEnvironment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateEnvironment"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{api_key}/clone/": {"post": {"operationId": "api_v1_environments_clone", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CloneEnvironment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CloneEnvironment"}}}, "tags": ["api"]}, "parameters": [{"name": "api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{api_key}/delete-traits/": {"post": {"operationId": "api_v1_environments_delete_traits", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DeleteAllTraitKeys"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DeleteAllTraitKeys"}}}, "tags": ["api"]}, "parameters": [{"name": "api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{api_key}/document/": {"get": {"operationId": "api_v1_environments_get_document", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EnvironmentSerializerWithMetadata"}}}, "tags": ["api"]}, "parameters": [{"name": "api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{api_key}/my-permissions/": {"get": {"operationId": "api_v1_environments_my-permissions_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserObjectPermissions"}}}, "tags": ["api"]}, "parameters": [{"name": "api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{api_key}/trait-keys/": {"get": {"operationId": "api_v1_environments_trait_keys", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TraitKeys"}}}, "tags": ["api"]}, "parameters": [{"name": "api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/api-keys/": {"get": {"operationId": "api_v1_environments_api-keys_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/EnvironmentAPIKey"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_api-keys_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EnvironmentAPIKey"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/EnvironmentAPIKey"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/api-keys/{id}/": {"put": {"operationId": "api_v1_environments_api-keys_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EnvironmentAPIKey"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EnvironmentAPIKey"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_environments_api-keys_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EnvironmentAPIKey"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EnvironmentAPIKey"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_api-keys_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/create-change-request/": {"post": {"operationId": "api_v1_environments_create-change-request_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ChangeRequestCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ChangeRequestCreate"}}, "400": {"description": "", "schema": {"$ref": "#/definitions/Error"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/edge-identities/": {"get": {"operationId": "api_v1_environments_edge-identities_list", "description": "", "parameters": [{"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "last_evaluated_key", "in": "query", "description": "Used as the starting point for the page", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["results"], "type": "object", "properties": {"last_evaluated_key": {"type": "string", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/EdgeIdentity"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_edge-identities_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EdgeIdentity"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/EdgeIdentity"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/edge-identities/{edge_identity_identity_uuid}/edge-featurestates/": {"get": {"operationId": "api_v1_environments_edge-identities_edge-featurestates_list", "description": "", "parameters": [{"name": "feature", "in": "query", "description": "ID of the feature to filter by", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/EdgeIdentityFeatureState"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_edge-identities_edge-featurestates_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EdgeIdentityFeatureState"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/EdgeIdentityFeatureState"}}}, "tags": ["api"]}, "parameters": [{"name": "edge_identity_identity_uuid", "in": "path", "required": true, "type": "string"}, {"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/edge-identities/{edge_identity_identity_uuid}/edge-featurestates/all/": {"get": {"operationId": "api_v1_environments_edge-identities_edge-featurestates_all_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/IdentityAllFeatureStates"}}}}, "tags": ["api"]}, "parameters": [{"name": "edge_identity_identity_uuid", "in": "path", "required": true, "type": "string"}, {"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/edge-identities/{edge_identity_identity_uuid}/edge-featurestates/{featurestate_uuid}/": {"get": {"operationId": "api_v1_environments_edge-identities_edge-featurestates_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EdgeIdentityFeatureState"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_environments_edge-identities_edge-featurestates_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EdgeIdentityFeatureState"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EdgeIdentityFeatureState"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_edge-identities_edge-featurestates_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "edge_identity_identity_uuid", "in": "path", "required": true, "type": "string"}, {"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "featurestate_uuid", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/edge-identities/{identity_uuid}/": {"get": {"operationId": "api_v1_environments_edge-identities_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EdgeIdentity"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_edge-identities_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "identity_uuid", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/edge-identities/{identity_uuid}/list-traits/": {"get": {"operationId": "api_v1_environments_edge-identities_list-traits_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/EdgeIdentityTraits"}}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "identity_uuid", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/edge-identities/{identity_uuid}/update-traits/": {"put": {"operationId": "api_v1_environments_edge-identities_update_traits", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EdgeIdentityTraits"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EdgeIdentityTraits"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "identity_uuid", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/features/{feature_pk}/create-segment-override/": {"post": {"operationId": "api_v1_environments_features_create-segment-override_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateSegmentOverrideFeatureState"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CreateSegmentOverrideFeatureState"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "feature_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/featurestates/": {"get": {"operationId": "api_v1_environments_featurestates_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "feature", "in": "query", "description": "ID of the feature to filter by.", "required": false, "type": "integer"}, {"name": "feature_name", "in": "query", "description": "Name of the feature to filter by.", "required": false, "type": "string"}, {"name": "anyIdentity", "in": "query", "description": "Pass any value to get results that have an identity override. Do not pass for default behaviour.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/FeatureStateSerializerWithIdentity"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_featurestates_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FeatureStateSerializerBasic"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/FeatureStateSerializerBasic"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/featurestates/{id}/": {"get": {"operationId": "api_v1_environments_featurestates_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FeatureStateSerializerBasic"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_environments_featurestates_update", "description": "Override update method to always assume update request is partial and create / update\nfeature state value.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FeatureStateSerializerBasic"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FeatureStateSerializerBasic"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_environments_featurestates_partial_update", "description": "Override partial_update as overridden update method assumes partial True for all requests.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FeatureStateSerializerCreate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FeatureStateSerializerCreate"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_featurestates_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/identities/": {"get": {"operationId": "api_v1_environments_identities_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Identity"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_identities_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Identity"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Identity"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/identities/{identity_pk}/featurestates/": {"get": {"operationId": "api_v1_environments_identities_featurestates_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "feature", "in": "query", "description": "ID of the feature to filter by.", "required": false, "type": "integer"}, {"name": "feature_name", "in": "query", "description": "Name of the feature to filter by.", "required": false, "type": "string"}, {"name": "anyIdentity", "in": "query", "description": "Pass any value to get results that have an identity override. Do not pass for default behaviour.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/FeatureStateSerializerWithIdentity"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_identities_featurestates_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FeatureStateSerializerBasic"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/FeatureStateSerializerBasic"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "identity_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/identities/{identity_pk}/featurestates/all/": {"get": {"operationId": "api_v1_environments_identities_featurestates_all", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/FeatureStateSerializerCreate"}}}}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "identity_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/identities/{identity_pk}/featurestates/{id}/": {"get": {"operationId": "api_v1_environments_identities_featurestates_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FeatureStateSerializerBasic"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_environments_identities_featurestates_update", "description": "Override update method to always assume update request is partial and create / update\nfeature state value.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FeatureStateSerializerBasic"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FeatureStateSerializerBasic"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_environments_identities_featurestates_partial_update", "description": "Override partial_update as overridden update method assumes partial True for all requests.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FeatureStateSerializerCreate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FeatureStateSerializerCreate"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_identities_featurestates_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "identity_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/identities/{identity_pk}/traits/": {"get": {"operationId": "api_v1_environments_identities_traits_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Trait"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_identities_traits_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Trait"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Trait"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "identity_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/identities/{identity_pk}/traits/{id}/": {"get": {"operationId": "api_v1_environments_identities_traits_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Trait"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_environments_identities_traits_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Trait"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Trait"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_environments_identities_traits_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Trait"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Trait"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_identities_traits_delete", "description": "", "parameters": [{"name": "deleteAllMatchingTraits", "in": "query", "description": "Deletes all traits in this environment matching the key of the deleted trait", "type": "boolean"}], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "identity_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/identities/{id}/": {"get": {"operationId": "api_v1_environments_identities_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Identity"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_environments_identities_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Identity"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Identity"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_environments_identities_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Identity"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Identity"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_identities_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/amplitude/": {"get": {"operationId": "api_v1_environments_integrations_amplitude_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/AmplitudeConfiguration"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_integrations_amplitude_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AmplitudeConfiguration"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AmplitudeConfiguration"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/amplitude/{id}/": {"get": {"operationId": "api_v1_environments_integrations_amplitude_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AmplitudeConfiguration"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_environments_integrations_amplitude_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AmplitudeConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AmplitudeConfiguration"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_environments_integrations_amplitude_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AmplitudeConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AmplitudeConfiguration"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_integrations_amplitude_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/dynatrace/": {"get": {"operationId": "api_v1_environments_integrations_dynatrace_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/DynatraceConfiguration"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_integrations_dynatrace_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DynatraceConfiguration"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DynatraceConfiguration"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/dynatrace/{id}/": {"get": {"operationId": "api_v1_environments_integrations_dynatrace_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DynatraceConfiguration"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_environments_integrations_dynatrace_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DynatraceConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DynatraceConfiguration"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_environments_integrations_dynatrace_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DynatraceConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DynatraceConfiguration"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_integrations_dynatrace_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/heap/": {"get": {"operationId": "api_v1_environments_integrations_heap_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/HeapConfiguration"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_integrations_heap_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HeapConfiguration"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/HeapConfiguration"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/heap/{id}/": {"get": {"operationId": "api_v1_environments_integrations_heap_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HeapConfiguration"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_environments_integrations_heap_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HeapConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HeapConfiguration"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_environments_integrations_heap_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HeapConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HeapConfiguration"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_integrations_heap_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/mixpanel/": {"get": {"operationId": "api_v1_environments_integrations_mixpanel_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/MixpanelConfiguration"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_integrations_mixpanel_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MixpanelConfiguration"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/MixpanelConfiguration"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/mixpanel/{id}/": {"get": {"operationId": "api_v1_environments_integrations_mixpanel_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MixpanelConfiguration"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_environments_integrations_mixpanel_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MixpanelConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MixpanelConfiguration"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_environments_integrations_mixpanel_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MixpanelConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MixpanelConfiguration"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_integrations_mixpanel_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/rudderstack/": {"get": {"operationId": "api_v1_environments_integrations_rudderstack_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/RudderstackConfiguration"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_integrations_rudderstack_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RudderstackConfiguration"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/RudderstackConfiguration"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/rudderstack/{id}/": {"get": {"operationId": "api_v1_environments_integrations_rudderstack_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RudderstackConfiguration"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_environments_integrations_rudderstack_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RudderstackConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RudderstackConfiguration"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_environments_integrations_rudderstack_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RudderstackConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RudderstackConfiguration"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_integrations_rudderstack_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/segment/": {"get": {"operationId": "api_v1_environments_integrations_segment_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/SegmentConfiguration"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_integrations_segment_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SegmentConfiguration"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SegmentConfiguration"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/segment/{id}/": {"get": {"operationId": "api_v1_environments_integrations_segment_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SegmentConfiguration"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_environments_integrations_segment_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SegmentConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SegmentConfiguration"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_environments_integrations_segment_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SegmentConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SegmentConfiguration"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_integrations_segment_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/slack-channels/": {"get": {"operationId": "api_v1_environments_integrations_slack-channels_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/SlackChannelList"}}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/slack/": {"get": {"operationId": "api_v1_environments_integrations_slack_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/SlackEnvironment"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_integrations_slack_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SlackEnvironment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SlackEnvironment"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/slack/callback/": {"get": {"operationId": "api_v1_environments_integrations_slack_slack_oauth_callback", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/SlackEnvironment"}}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/slack/oauth/": {"get": {"operationId": "api_v1_environments_integrations_slack_slack_oauth_init", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/SlackEnvironment"}}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/slack/signature/": {"get": {"operationId": "api_v1_environments_integrations_slack_get_temporary_signature", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/SlackEnvironment"}}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/slack/{id}/": {"get": {"operationId": "api_v1_environments_integrations_slack_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SlackEnvironment"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_environments_integrations_slack_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SlackEnvironment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SlackEnvironment"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_environments_integrations_slack_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SlackEnvironment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SlackEnvironment"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_integrations_slack_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/webhook/": {"get": {"operationId": "api_v1_environments_integrations_webhook_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/WebhookConfiguration"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_integrations_webhook_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WebhookConfiguration"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/WebhookConfiguration"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/integrations/webhook/{id}/": {"get": {"operationId": "api_v1_environments_integrations_webhook_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/WebhookConfiguration"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_environments_integrations_webhook_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WebhookConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/WebhookConfiguration"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_environments_integrations_webhook_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WebhookConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/WebhookConfiguration"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_integrations_webhook_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/list-change-requests/": {"get": {"operationId": "api_v1_environments_list-change-requests_list", "description": "", "parameters": [{"name": "committed", "in": "query", "description": "Filter on the committed status of a change request.", "required": false, "type": "boolean", "x-nullable": true}, {"name": "live_from_after", "in": "query", "description": "Filter change requests due to go live after this datetime.", "required": false, "type": "string", "format": "date-time"}, {"name": "feature_id", "in": "query", "description": "Filter for a particular feature.", "required": false, "type": "integer"}, {"name": "search", "in": "query", "description": "Fuzzy search across Change Request titles.", "required": false, "type": "string", "minLength": 1}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ChangeRequestList"}}, "400": {"description": "", "schema": {"$ref": "#/definitions/Error"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/user-group-permissions/": {"get": {"operationId": "api_v1_environments_user-group-permissions_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ListUserPermissionGroupEnvironmentPermission"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_user-group-permissions_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateUpdateUserPermissionGroupEnvironmentPermission"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateUserPermissionGroupEnvironmentPermission"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/user-group-permissions/{id}/": {"get": {"operationId": "api_v1_environments_user-group-permissions_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateUserPermissionGroupEnvironmentPermission"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_environments_user-group-permissions_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateUpdateUserPermissionGroupEnvironmentPermission"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateUserPermissionGroupEnvironmentPermission"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_environments_user-group-permissions_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateUpdateUserPermissionGroupEnvironmentPermission"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateUserPermissionGroupEnvironmentPermission"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_user-group-permissions_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/user-permissions/": {"get": {"operationId": "api_v1_environments_user-permissions_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ListUserEnvironmentPermission"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_user-permissions_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateUpdateUserEnvironmentPermission"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateUserEnvironmentPermission"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/user-permissions/{id}/": {"get": {"operationId": "api_v1_environments_user-permissions_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateUserEnvironmentPermission"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_environments_user-permissions_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateUpdateUserEnvironmentPermission"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateUserEnvironmentPermission"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_environments_user-permissions_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateUpdateUserEnvironmentPermission"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateUserEnvironmentPermission"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_user-permissions_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/webhooks/": {"get": {"operationId": "api_v1_environments_webhooks_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Webhook"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_environments_webhooks_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Webhook"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Webhook"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/webhooks/test/": {"post": {"operationId": "api_v1_environments_webhooks_trigger_sample_webhook", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Webhook"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Webhook"}}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}]}, "/api/v1/environments/{environment_api_key}/webhooks/{id}/": {"put": {"operationId": "api_v1_environments_webhooks_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Webhook"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Webhook"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_environments_webhooks_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Webhook"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Webhook"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_environments_webhooks_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "environment_api_key", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/features/feature-segments/": {"get": {"operationId": "api_v1_features_feature-segments_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "environment", "in": "query", "required": true, "type": "integer"}, {"name": "feature", "in": "query", "required": true, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/FeatureSegmentList"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_features_feature-segments_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FeatureSegmentCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/FeatureSegmentCreate"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/features/feature-segments/get-by-uuid/{uuid}/": {"get": {"operationId": "api_v1_features_feature-segments_get_by_uuid", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/FeatureSegmentList"}}}}}}, "tags": ["api"]}, "parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/api/v1/features/feature-segments/update-priorities/": {"post": {"operationId": "api_v1_features_feature-segments_update_priorities", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/FeatureSegmentChangePriorities"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/FeatureSegmentList"}}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/features/feature-segments/{id}/": {"get": {"operationId": "api_v1_features_feature-segments_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FeatureSegmentList"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_features_feature-segments_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FeatureSegmentCreate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FeatureSegmentCreate"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_features_feature-segments_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FeatureSegmentCreate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FeatureSegmentCreate"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_features_feature-segments_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/features/featurestates/": {"get": {"operationId": "api_v1_features_featurestates_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/WritableNestedFeatureState"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_features_featurestates_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WritableNestedFeatureState"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/WritableNestedFeatureState"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/features/featurestates/get-by-uuid/{uuid}/": {"get": {"operationId": "api_v1_features_featurestates_get-by-uuid_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/WritableNestedFeatureState"}}}, "tags": ["api"]}, "parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/api/v1/features/featurestates/{id}/": {"put": {"operationId": "api_v1_features_featurestates_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WritableNestedFeatureState"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/WritableNestedFeatureState"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_features_featurestates_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WritableNestedFeatureState"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/WritableNestedFeatureState"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/features/get-by-uuid/{uuid}/": {"get": {"operationId": "api_v1_features_get-by-uuid_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ListCreateFeature"}}}, "tags": ["api"]}, "parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/api/v1/features/workflows/change-requests/{id}/": {"get": {"operationId": "api_v1_features_workflows_change-requests_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ChangeRequestRetrieve"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_features_workflows_change-requests_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ChangeRequestUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ChangeRequestUpdate"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_features_workflows_change-requests_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ChangeRequestUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ChangeRequestUpdate"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_features_workflows_change-requests_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/features/workflows/change-requests/{id}/approve/": {"post": {"operationId": "api_v1_features_workflows_change-requests_approve", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ChangeRequestRetrieve"}}, "400": {"description": "", "schema": {"$ref": "#/definitions/Error"}}, "403": {"description": "", "schema": {"$ref": "#/definitions/Error"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/features/workflows/change-requests/{id}/commit/": {"post": {"operationId": "api_v1_features_workflows_change-requests_commit", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ChangeRequestRetrieve"}}, "400": {"description": "", "schema": {"$ref": "#/definitions/Error"}}, "403": {"description": "", "schema": {"$ref": "#/definitions/Error"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/flags/": {"get": {"operationId": "api_v1_flags_list", "description": "USING THIS ENDPOINT WITH AN IDENTIFIER IS DEPRECATED.\nPlease use `/identities/?identifier=<identifier>` instead.\n---\nNote that when providing the `feature` query argument, this endpoint will\nreturn either a single object or a 404 (if the feature does not exist) rather\nthan a list.", "parameters": [{"name": "feature", "in": "query", "description": "Name of the feature to get the state of", "required": false, "type": "string", "minLength": 1}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/FeatureStateSerializerFull"}}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/flags/{identifier}": {"get": {"operationId": "api_v1_flags_read", "description": "USING THIS ENDPOINT WITH AN IDENTIFIER IS DEPRECATED.\nPlease use `/identities/?identifier=<identifier>` instead.\n---\nNote that when providing the `feature` query argument, this endpoint will\nreturn either a single object or a 404 (if the feature does not exist) rather\nthan a list.", "parameters": [{"name": "feature", "in": "query", "description": "Name of the feature to get the state of", "required": false, "type": "string", "minLength": 1}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/FeatureStateSerializerFull"}}}}, "tags": ["api"]}, "parameters": [{"name": "identifier", "in": "path", "required": true, "type": "string"}]}, "/api/v1/identities/": {"get": {"operationId": "identify_user", "description": "", "parameters": [{"name": "identifier", "in": "query", "required": true, "type": "string", "minLength": 1}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SDKIdentitiesResponse"}}}, "tags": ["api"]}, "post": {"operationId": "identify_user_with_traits", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IdentifyWithTraits"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SDKIdentitiesResponse"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/metadata/fields/": {"get": {"operationId": "api_v1_metadata_fields_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "organisation", "in": "query", "description": "Organisation ID to filter by", "required": true, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/MetadataField"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_metadata_fields_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MetadataField"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/MetadataField"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/metadata/fields/{id}/": {"get": {"operationId": "api_v1_metadata_fields_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MetadataField"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_metadata_fields_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MetadataField"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MetadataField"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_metadata_fields_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MetadataField"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MetadataField"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_metadata_fields_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/multivariate/options/get-by-uuid/{uuid}/": {"get": {"operationId": "api_v1_multivariate_options_get-by-uuid_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MultivariateFeatureOption"}}}, "tags": ["api"]}, "parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/": {"get": {"operationId": "api_v1_organisations_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/OrganisationSerializerFull"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_organisations_create", "description": "Override create method to add new organisation to authenticated user", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/OrganisationSerializerFull"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/OrganisationSerializerFull"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/organisations/permissions/": {"get": {"operationId": "api_v1_organisations_permissions", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/PermissionModel"}}}}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/organisations/{id}/": {"get": {"operationId": "api_v1_organisations_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/OrganisationSerializerFull"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_organisations_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/OrganisationSerializerFull"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/OrganisationSerializerFull"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_organisations_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/OrganisationSerializerFull"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/OrganisationSerializerFull"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_organisations_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{id}/get-hosted-page-url-for-subscription-upgrade/": {"post": {"operationId": "api_v1_organisations_get_hosted_page_url_for_subscription_upgrade", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/GetHostedPageForSubscriptionUpgrade"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/GetHostedPageForSubscriptionUpgrade"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{id}/get-subscription-metadata/": {"get": {"operationId": "api_v1_organisations_get-subscription-metadata_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SubscriptionDetails"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{id}/influx-data/": {"get": {"operationId": "api_v1_organisations_get_influx_data", "description": "Please use \u200b\u200b/api\u200b/v1\u200b/organisations\u200b/{organisation_pk}\u200b/usage-data\u200b/", "parameters": [{"name": "project_id", "in": "query", "required": false, "type": "integer"}, {"name": "environment_id", "in": "query", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/InfluxData"}}}, "tags": ["api"], "deprecated": true}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{id}/invite/": {"post": {"operationId": "api_v1_organisations_invite", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MultiInvites"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/MultiInvites"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{id}/my-permissions/": {"get": {"operationId": "api_v1_organisations_my-permissions_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserObjectPermissions"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{id}/portal-url/": {"get": {"operationId": "api_v1_organisations_get_portal_url", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PortalUrl"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{id}/projects/": {"get": {"operationId": "api_v1_organisations_projects", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/OrganisationSerializerFull"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{id}/remove-users/": {"post": {"operationId": "api_v1_organisations_remove_users", "description": "Takes a list of users and removes them from the organisation provided in the url", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserId"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/UserId"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{id}/update-subscription/": {"post": {"operationId": "api_v1_organisations_update_subscription", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UpdateSubscription"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/OrganisationSerializerFull"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{id}/usage/": {"get": {"operationId": "api_v1_organisations_usage", "description": "Please use \u200b\u200b/api\u200b/v1\u200b/organisations\u200b/{organisation_pk}\u200b/usage-data\u200b/total-count\u200b/", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/OrganisationSerializerFull"}}}, "tags": ["api"], "deprecated": true}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/groups/": {"get": {"operationId": "api_v1_organisations_groups_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ListUserPermissionGroup"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_organisations_groups_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ListUserPermissionGroup"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ListUserPermissionGroup"}}}, "tags": ["api"]}, "parameters": [{"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/groups/{group_pk}/users/{user_pk}/make-admin": {"post": {"operationId": "api_v1_organisations_groups_users_make-admin_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "group_pk", "in": "path", "required": true, "type": "string"}, {"name": "organisation_pk", "in": "path", "required": true, "type": "string"}, {"name": "user_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/groups/{group_pk}/users/{user_pk}/remove-admin": {"post": {"operationId": "api_v1_organisations_groups_users_remove-admin_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "group_pk", "in": "path", "required": true, "type": "string"}, {"name": "organisation_pk", "in": "path", "required": true, "type": "string"}, {"name": "user_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/groups/{id}/": {"get": {"operationId": "api_v1_organisations_groups_read", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["api"]}, "put": {"operationId": "api_v1_organisations_groups_update", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_organisations_groups_partial_update", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_organisations_groups_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/groups/{id}/add-users/": {"post": {"operationId": "api_v1_organisations_groups_add_users", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserIds"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserPermissionGroupSerializerDetail"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/groups/{id}/remove-users/": {"post": {"operationId": "api_v1_organisations_groups_remove_users", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserIds"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserPermissionGroupSerializerDetail"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/invite-links/": {"get": {"operationId": "api_v1_organisations_invite-links_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/InviteLink"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_organisations_invite-links_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/InviteLink"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/InviteLink"}}}, "tags": ["api"]}, "parameters": [{"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/invite-links/{id}/": {"delete": {"operationId": "api_v1_organisations_invite-links_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/invites/": {"get": {"operationId": "api_v1_organisations_invites_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/InviteList"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_organisations_invites_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Invite"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Invite"}}}, "tags": ["api"]}, "parameters": [{"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/invites/{id}/": {"get": {"operationId": "api_v1_organisations_invites_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/InviteList"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_organisations_invites_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/invites/{id}/resend/": {"post": {"operationId": "api_v1_organisations_invites_resend", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/InviteList"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/InviteList"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/master-api-keys/": {"get": {"operationId": "api_v1_organisations_master-api-keys_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/MasterAPIKey"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_organisations_master-api-keys_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MasterAPIKey"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/MasterAPIKey"}}}, "tags": ["api"]}, "parameters": [{"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/master-api-keys/{prefix}/": {"get": {"operationId": "api_v1_organisations_master-api-keys_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MasterAPIKey"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_organisations_master-api-keys_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MasterAPIKey"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MasterAPIKey"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_organisations_master-api-keys_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MasterAPIKey"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MasterAPIKey"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_organisations_master-api-keys_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "organisation_pk", "in": "path", "required": true, "type": "string"}, {"name": "prefix", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/metadata-model-fields/": {"get": {"operationId": "api_v1_organisations_metadata-model-fields_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "content_type", "in": "query", "description": "Content type of the model to filter by.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/MetaDataModelField"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_organisations_metadata-model-fields_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MetaDataModelField"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/MetaDataModelField"}}}, "tags": ["api"]}, "parameters": [{"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/metadata-model-fields/supported-content-types/": {"get": {"operationId": "api_v1_organisations_metadata-model-fields_supported_content_types", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ContentType"}}}}, "tags": ["api"]}, "parameters": [{"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/metadata-model-fields/supported-required-for-models/": {"get": {"operationId": "api_v1_organisations_metadata-model-fields_supported_required_for_models", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "model_name", "in": "query", "required": true, "type": "string", "minLength": 1}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ContentType"}}}}, "tags": ["api"]}, "parameters": [{"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/metadata-model-fields/{id}/": {"get": {"operationId": "api_v1_organisations_metadata-model-fields_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MetaDataModelField"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_organisations_metadata-model-fields_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MetaDataModelField"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MetaDataModelField"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_organisations_metadata-model-fields_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MetaDataModelField"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MetaDataModelField"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_organisations_metadata-model-fields_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/usage-data/": {"get": {"operationId": "api_v1_organisations_usage-data_list", "description": "", "parameters": [{"name": "project_id", "in": "query", "required": false, "type": "integer"}, {"name": "environment_id", "in": "query", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UsageData"}}}, "tags": ["api"]}, "parameters": [{"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/usage-data/total-count/": {"get": {"operationId": "api_v1_organisations_usage-data_total-count_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UsageTotalCount"}}}, "tags": ["api"]}, "parameters": [{"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/user-group-permissions/": {"get": {"operationId": "api_v1_organisations_user-group-permissions_list", "description": "", "parameters": [{"name": "group", "in": "query", "description": "", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/UserPermissionGroupOrganisationPermissionList"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_organisations_user-group-permissions_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserPermissionGroupOrganisationPermissionUpdateCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/UserPermissionGroupOrganisationPermissionUpdateCreate"}}}, "tags": ["api"]}, "parameters": [{"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/user-group-permissions/{id}/": {"put": {"operationId": "api_v1_organisations_user-group-permissions_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserPermissionGroupOrganisationPermissionUpdateCreate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserPermissionGroupOrganisationPermissionUpdateCreate"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_organisations_user-group-permissions_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserPermissionGroupOrganisationPermissionUpdateCreate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserPermissionGroupOrganisationPermissionUpdateCreate"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_organisations_user-group-permissions_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/user-permissions/": {"get": {"operationId": "api_v1_organisations_user-permissions_list", "description": "", "parameters": [{"name": "user", "in": "query", "description": "", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/UserOrganisationPermissionList"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_organisations_user-permissions_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserOrganisationPermissionUpdateCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/UserOrganisationPermissionUpdateCreate"}}}, "tags": ["api"]}, "parameters": [{"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/user-permissions/{id}/": {"put": {"operationId": "api_v1_organisations_user-permissions_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserOrganisationPermissionUpdateCreate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserOrganisationPermissionUpdateCreate"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_organisations_user-permissions_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserOrganisationPermissionUpdateCreate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserOrganisationPermissionUpdateCreate"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_organisations_user-permissions_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/users/": {"get": {"operationId": "api_v1_organisations_users_list", "description": "", "parameters": [{"name": "exclude_current", "in": "query", "required": false, "type": "boolean", "default": false}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/UserList"}}}}, "tags": ["api"]}, "parameters": [{"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/users/{id}/update-role/": {"post": {"operationId": "api_v1_organisations_users_update_role", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserOrganisation"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/UserOrganisation"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/webhooks/": {"get": {"operationId": "api_v1_organisations_webhooks_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/OrganisationWebhook"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_organisations_webhooks_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/OrganisationWebhook"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/OrganisationWebhook"}}}, "tags": ["api"]}, "parameters": [{"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/webhooks/test/": {"post": {"operationId": "api_v1_organisations_webhooks_trigger_sample_webhook", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/OrganisationWebhook"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/OrganisationWebhook"}}}, "tags": ["api"]}, "parameters": [{"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/organisations/{organisation_pk}/webhooks/{id}/": {"get": {"operationId": "api_v1_organisations_webhooks_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/OrganisationWebhook"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_organisations_webhooks_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/OrganisationWebhook"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/OrganisationWebhook"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_organisations_webhooks_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/OrganisationWebhook"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/OrganisationWebhook"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_organisations_webhooks_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "organisation_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/": {"get": {"operationId": "api_v1_projects_list", "description": "", "parameters": [{"name": "organisation", "in": "query", "description": "ID of the organisation to filter by.", "required": false, "type": "integer"}, {"name": "uuid", "in": "query", "description": "uuid of the project to filter by.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Project"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_projects_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Project"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/projects/get-by-uuid/{uuid}/": {"get": {"operationId": "api_v1_projects_get_by_uuid", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Project"}}}}, "tags": ["api"]}, "parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/permissions/": {"get": {"operationId": "api_v1_projects_permissions", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PermissionModel"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/projects/{id}/": {"get": {"operationId": "api_v1_projects_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_projects_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Project"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_projects_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Project"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_projects_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{id}/environments/": {"get": {"operationId": "api_v1_projects_environments", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{id}/migrate-to-edge/": {"post": {"operationId": "api_v1_projects_migrate_to_edge", "description": "", "parameters": [], "responses": {"202": {"description": "Migration event generated"}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{id}/my-permissions/": {"get": {"operationId": "api_v1_projects_my-permissions_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserObjectPermissions"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/all-user-permissions/{user_pk}/": {"get": {"operationId": "api_v1_projects_all-user-permissions_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserObjectPermissions"}}}, "tags": ["api"]}, "parameters": [{"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "user_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/features/": {"get": {"operationId": "api_v1_projects_features_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "search", "in": "query", "required": false, "type": "string", "minLength": 1}, {"name": "sort_field", "in": "query", "required": false, "type": "string", "enum": ["created_date", "name"], "default": "created_date"}, {"name": "sort_direction", "in": "query", "required": false, "type": "string", "enum": ["ASC", "DESC"], "default": "ASC"}, {"name": "tags", "in": "query", "description": "Comma separated list of tag ids to filter on (AND)", "required": false, "type": "string", "minLength": 1}, {"name": "is_archived", "in": "query", "required": false, "type": "boolean"}, {"name": "environment", "in": "query", "description": "Integer ID of the environment to view features in the context of.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ListCreateFeature"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_projects_features_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ListCreateFeature"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ListCreateFeature"}}}, "tags": ["api"]}, "parameters": [{"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/features/{feature_pk}/mv-options/": {"get": {"operationId": "api_v1_projects_features_mv-options_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/MultivariateFeatureOption"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_projects_features_mv-options_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MultivariateFeatureOption"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/MultivariateFeatureOption"}}}, "tags": ["api"]}, "parameters": [{"name": "feature_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/features/{feature_pk}/mv-options/{id}/": {"get": {"operationId": "api_v1_projects_features_mv-options_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MultivariateFeatureOption"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_projects_features_mv-options_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MultivariateFeatureOption"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MultivariateFeatureOption"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_projects_features_mv-options_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MultivariateFeatureOption"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MultivariateFeatureOption"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_projects_features_mv-options_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "feature_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/features/{id}/": {"get": {"operationId": "api_v1_projects_features_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ListCreateFeature"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_projects_features_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UpdateFeature"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UpdateFeature"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_projects_features_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UpdateFeature"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UpdateFeature"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_projects_features_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/features/{id}/add-owners/": {"post": {"operationId": "api_v1_projects_features_add_owners", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FeatureOwnerInput"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProjectFeature"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/features/{id}/evaluation-data/": {"get": {"operationId": "api_v1_projects_features_get_evaluation_data", "description": "", "parameters": [{"name": "period", "in": "query", "description": "number of days", "required": false, "type": "integer", "default": 30}, {"name": "environment_id", "in": "query", "required": true, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FeatureEvaluationData"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/features/{id}/influx-data/": {"get": {"operationId": "api_v1_projects_features_get_influx_data", "description": "Please use \u200b/api\u200b/v1\u200b/projects\u200b/{project_pk}\u200b/features\u200b/{id}\u200b/evaluation-data/", "parameters": [{"name": "period", "in": "query", "required": false, "type": "string", "default": "24h", "minLength": 1}, {"name": "environment_id", "in": "query", "required": true, "type": "string", "minLength": 1}, {"name": "aggregate_every", "in": "query", "required": false, "type": "string", "default": "24h", "minLength": 1}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FeatureInfluxData"}}}, "tags": ["api"], "deprecated": true}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/features/{id}/remove-owners/": {"post": {"operationId": "api_v1_projects_features_remove_owners", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FeatureOwnerInput"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProjectFeature"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/integrations/datadog/": {"get": {"operationId": "api_v1_projects_integrations_datadog_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/DataDogConfiguration"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_projects_integrations_datadog_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DataDogConfiguration"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DataDogConfiguration"}}}, "tags": ["api"]}, "parameters": [{"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/integrations/datadog/{id}/": {"get": {"operationId": "api_v1_projects_integrations_datadog_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DataDogConfiguration"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_projects_integrations_datadog_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DataDogConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DataDogConfiguration"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_projects_integrations_datadog_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DataDogConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DataDogConfiguration"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_projects_integrations_datadog_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/integrations/new-relic/": {"get": {"operationId": "api_v1_projects_integrations_new-relic_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/NewRelicConfiguration"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_projects_integrations_new-relic_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/NewRelicConfiguration"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/NewRelicConfiguration"}}}, "tags": ["api"]}, "parameters": [{"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/integrations/new-relic/{id}/": {"get": {"operationId": "api_v1_projects_integrations_new-relic_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/NewRelicConfiguration"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_projects_integrations_new-relic_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/NewRelicConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/NewRelicConfiguration"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_projects_integrations_new-relic_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/NewRelicConfiguration"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/NewRelicConfiguration"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_projects_integrations_new-relic_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/segments/": {"get": {"operationId": "api_v1_projects_segments_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "identity", "in": "query", "description": "Optionally provide the id of an identity to get only the segments they match", "required": false, "type": "integer"}, {"name": "q", "in": "query", "description": "Search term to find segment with given term in their name", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Segment"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_projects_segments_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Segment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Segment"}}}, "tags": ["api"]}, "parameters": [{"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/segments/{id}/": {"get": {"operationId": "api_v1_projects_segments_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Segment"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_projects_segments_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Segment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Segment"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_projects_segments_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Segment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Segment"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_projects_segments_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/segments/{id}/associated-features/": {"get": {"operationId": "api_v1_projects_segments_associated_features", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SegmentAssociatedFeatureState"}}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/tags/": {"get": {"operationId": "api_v1_projects_tags_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Tag"}}}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_projects_tags_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Tag"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Tag"}}}, "tags": ["api"]}, "parameters": [{"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/tags/{id}/": {"get": {"operationId": "api_v1_projects_tags_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Tag"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_projects_tags_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Tag"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Tag"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_projects_tags_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Tag"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Tag"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_projects_tags_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/user-group-permissions/": {"get": {"operationId": "api_v1_projects_user-group-permissions_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ListUserPermissionGroupProjectPermission"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_projects_user-group-permissions_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateUpdateUserPermissionGroupProjectPermission"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateUserPermissionGroupProjectPermission"}}}, "tags": ["api"]}, "parameters": [{"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/user-group-permissions/{id}/": {"get": {"operationId": "api_v1_projects_user-group-permissions_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateUserPermissionGroupProjectPermission"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_projects_user-group-permissions_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateUpdateUserPermissionGroupProjectPermission"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateUserPermissionGroupProjectPermission"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_projects_user-group-permissions_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateUpdateUserPermissionGroupProjectPermission"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateUserPermissionGroupProjectPermission"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_projects_user-group-permissions_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/user-permissions/": {"get": {"operationId": "api_v1_projects_user-permissions_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ListUserProjectPermission"}}}}, "tags": ["api"]}, "post": {"operationId": "api_v1_projects_user-permissions_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateUpdateUserProjectPermission"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateUserProjectPermission"}}}, "tags": ["api"]}, "parameters": [{"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/projects/{project_pk}/user-permissions/{id}/": {"get": {"operationId": "api_v1_projects_user-permissions_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateUserProjectPermission"}}}, "tags": ["api"]}, "put": {"operationId": "api_v1_projects_user-permissions_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateUpdateUserProjectPermission"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateUserProjectPermission"}}}, "tags": ["api"]}, "patch": {"operationId": "api_v1_projects_user-permissions_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateUpdateUserProjectPermission"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CreateUpdateUserProjectPermission"}}}, "tags": ["api"]}, "delete": {"operationId": "api_v1_projects_user-permissions_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/api/v1/segments/get-by-uuid/{uuid}/": {"get": {"operationId": "api_v1_segments_get-by-uuid_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Segment"}}}, "tags": ["api"]}, "parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/api/v1/traits/": {"post": {"operationId": "api_v1_traits_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SDKCreateUpdateTrait"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SDKCreateUpdateTrait"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/traits/bulk/": {"put": {"operationId": "api_v1_traits_bulk_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/SDKCreateUpdateTrait"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/SDKCreateUpdateTrait"}}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/traits/increment-value/": {"post": {"operationId": "api_v1_traits_increment_value", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IncrementTraitValue"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/IncrementTraitValue"}}}, "tags": ["api"]}, "parameters": []}, "/api/v1/users/join/link/{hash}/": {"post": {"operationId": "api_v1_users_join_link_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "hash", "in": "path", "required": true, "type": "string"}]}, "/api/v1/users/join/{hash}/": {"post": {"operationId": "api_v1_users_join_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "hash", "in": "path", "required": true, "type": "string"}]}, "/processor/monitoring/": {"get": {"operationId": "processor_monitoring_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Monitoring"}}}, "tags": ["processor"]}, "parameters": []}}, "definitions": {"Telemetry": {"required": ["organisations", "projects", "environments", "features", "segments", "users", "debug_enabled", "env"], "type": "object", "properties": {"organisations": {"title": "Organisations", "type": "integer"}, "projects": {"title": "Projects", "type": "integer"}, "environments": {"title": "Environments", "type": "integer"}, "features": {"title": "Features", "type": "integer"}, "segments": {"title": "Segments", "type": "integer"}, "users": {"title": "Users", "type": "integer"}, "debug_enabled": {"title": "Debug enabled", "type": "boolean"}, "env": {"title": "Env", "type": "string", "minLength": 1}}}, "UserList": {"title": "Author", "required": ["email", "first_name", "last_name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "first_name": {"title": "First name", "type": "string", "maxLength": 30, "minLength": 1}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150, "minLength": 1}, "last_login": {"title": "Last login", "type": "string", "format": "date-time", "x-nullable": true}}}, "EnvironmentSerializerLight": {"title": "Environment", "required": ["name", "project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 2000, "minLength": 1}, "api_key": {"title": "Api key", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string", "maxLength": 20000, "x-nullable": true}, "project": {"title": "Project", "description": "Changing the project selected will remove all previous Feature States for the previously associated projects Features that are related to this Environment. New default Feature States will be created for the new selected projects Features for this Environment.", "type": "integer"}, "minimum_change_request_approvals": {"title": "Minimum change request approvals", "type": "integer", "maximum": 2147483647, "minimum": -2147483648, "x-nullable": true}, "allow_client_traits": {"title": "Allow client traits", "description": "Allows clients using the client API key to set traits.", "type": "boolean"}, "banner_text": {"title": "Banner text", "type": "string", "maxLength": 255, "x-nullable": true}, "banner_colour": {"title": "Banner colour", "description": "hex code for the banner colour", "type": "string", "maxLength": 7, "x-nullable": true}, "hide_disabled_flags": {"title": "Hide disabled flags", "description": "If true will exclude flags from SDK which are disabled. NOTE: If set, this will override the project `hide_disabled_flags`", "type": "boolean", "x-nullable": true}, "use_mv_v2_evaluation": {"title": "Use mv v2 evaluation", "description": "Enable this to have consistent multivariate evaluations across all SDKs(in local and server side mode)", "type": "boolean"}, "hide_sensitive_data": {"title": "Hide sensitive data", "description": "If true, will hide sensitive data(e.g: traits, description etc) from the SDK endpoints", "type": "boolean"}}}, "Project": {"title": "Project", "required": ["name", "organisation"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "uuid": {"title": "Uuid", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 2000, "minLength": 1}, "organisation": {"title": "Organisation", "type": "integer"}, "hide_disabled_flags": {"title": "Hide disabled flags", "description": "If true will exclude flags from SDK which are disabled", "type": "boolean"}, "enable_dynamo_db": {"title": "Enable dynamo db", "description": "If true will sync environment data with dynamodb and allow access to dynamodb identities", "type": "boolean"}, "migration_status": {"title": "Migration status", "description": "Edge migration status of the project; can be one of: MIGRATION_SCHEDULED, MIGRATION_COMPLETED, MIGRATION_IN_PROGRESS, MIGRATION_NOT_STARTED, NOT_APPLICABLE", "type": "string", "readOnly": true}, "use_edge_identities": {"title": "Use edge identities", "type": "boolean", "readOnly": true}, "prevent_flag_defaults": {"title": "Prevent flag defaults", "description": "Prevent defaults from being set in all environments when creating a feature.", "type": "boolean"}, "enable_realtime_updates": {"title": "Enable realtime updates", "description": "Enable this to trigger a realtime(sse) event whenever the value of a flag changes", "type": "boolean"}, "only_allow_lower_case_feature_names": {"title": "Only allow lower case feature names", "description": "Used by UI to validate feature names", "type": "boolean"}, "feature_name_regex": {"title": "Feature name regex", "description": "Used for validating feature names", "type": "string", "maxLength": 255, "x-nullable": true}}}, "AuditLog": {"required": ["log", "author", "environment", "project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "created_date": {"title": "DateCreated", "type": "string", "format": "date-time", "readOnly": true}, "log": {"title": "Log", "type": "string", "minLength": 1}, "author": {"$ref": "#/definitions/UserList"}, "environment": {"$ref": "#/definitions/EnvironmentSerializerLight"}, "project": {"$ref": "#/definitions/Project"}, "related_object_id": {"title": "Related object id", "type": "integer", "maximum": 2147483647, "minimum": -2147483648, "x-nullable": true}, "related_object_type": {"title": "Related object type", "type": "string", "maxLength": 20, "minLength": 1, "x-nullable": true}, "is_system_event": {"title": "Is system event", "type": "boolean"}}}, "RequestMFAMethodCode": {"type": "object", "properties": {"method": {"title": "Method", "type": "string", "maxLength": 255, "minLength": 1}}}, "Login": {"required": ["password", "email"], "type": "object", "properties": {"password": {"title": "Password", "type": "string", "minLength": 1}, "email": {"title": "Email", "type": "string", "minLength": 1}}}, "CodeLogin": {"required": ["ephemeral_token", "code"], "type": "object", "properties": {"ephemeral_token": {"title": "Ephemeral token", "type": "string", "minLength": 1}, "code": {"title": "Code", "type": "string", "minLength": 1}}}, "ChangePrimaryMethod": {"required": ["code", "method"], "type": "object", "properties": {"code": {"title": "Code", "type": "string", "minLength": 1}, "method": {"title": "Method", "type": "string", "enum": ["app"]}}}, "GithubLogin": {"required": ["access_token"], "type": "object", "properties": {"access_token": {"title": "Access token", "description": "Code or access token returned from the FE interaction with the third party login provider.", "type": "string", "minLength": 1}, "sign_up_type": {"title": "Sign up type", "description": "Provide information about how the user signed up (i.e. via invite or not)", "type": "string", "enum": ["NO_INVITE", "INVITE_EMAIL", "INVITE_LINK"], "x-nullable": true}}}, "CustomToken": {"required": ["key"], "type": "object", "properties": {"key": {"title": "Key", "type": "string", "maxLength": 40, "minLength": 1}}}, "Error": {"required": ["message"], "type": "object", "properties": {"message": {"title": "Message", "type": "string", "minLength": 1}}}, "GoogleLogin": {"required": ["access_token"], "type": "object", "properties": {"access_token": {"title": "Access token", "description": "Code or access token returned from the FE interaction with the third party login provider.", "type": "string", "minLength": 1}, "sign_up_type": {"title": "Sign up type", "description": "Provide information about how the user signed up (i.e. via invite or not)", "type": "string", "enum": ["NO_INVITE", "INVITE_EMAIL", "INVITE_LINK"], "x-nullable": true}}}, "SamlConfiguration": {"required": ["organisation", "organisation_name", "frontend_url"], "type": "object", "properties": {"organisation": {"title": "Organisation", "type": "integer"}, "organisation_name": {"title": "Organisation name", "description": "An alphanumeric string to uniquely identify the organisation.", "type": "string", "pattern": "^[A-Za-z0-9-]", "maxLength": 100, "minLength": 1}, "frontend_url": {"title": "Frontend URL", "description": "Base URL to redirect to on a successful SAML authentication, e.g. https://app.flagsmith.com/", "type": "string", "format": "uri", "maxLength": 200, "minLength": 1}, "idp_metadata_xml": {"title": "IdP Metadata XML", "type": "string", "x-nullable": true}, "allow_idp_initiated": {"title": "Allow IdP-initiated (unsolicited) login", "type": "boolean"}}}, "SamlLogin": {"required": ["access_token"], "type": "object", "properties": {"access_token": {"title": "Access token", "description": "Code or access token returned from the FE interaction with the third party login provider.", "type": "string", "minLength": 1}}}, "SamlUserToken": {"required": ["key"], "type": "object", "properties": {"key": {"title": "Key", "type": "string", "maxLength": 40, "minLength": 1}}}, "SamlRequestHeaders": {"title": "Headers", "required": ["Location"], "type": "object", "properties": {"Location": {"title": "Location", "type": "string", "minLength": 1}}}, "SamlRequest": {"required": ["headers", "status", "url"], "type": "object", "properties": {"headers": {"$ref": "#/definitions/SamlRequestHeaders"}, "status": {"title": "Status", "type": "integer"}, "url": {"title": "Url", "type": "string", "minLength": 1}}}, "User": {"required": ["first_name", "last_name"], "type": "object", "properties": {"first_name": {"title": "First name", "type": "string", "maxLength": 30, "minLength": 1}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150, "minLength": 1}, "sign_up_type": {"title": "Sign up type", "type": "string", "enum": ["NO_INVITE", "INVITE_EMAIL", "INVITE_LINK"], "x-nullable": true}, "id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email", "type": "string", "format": "email", "readOnly": true, "minLength": 1}}}, "CustomUserCreate": {"required": ["first_name", "last_name", "email", "password"], "type": "object", "properties": {"first_name": {"title": "First name", "type": "string", "maxLength": 30, "minLength": 1}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150, "minLength": 1}, "sign_up_type": {"title": "Sign up type", "type": "string", "enum": ["NO_INVITE", "INVITE_EMAIL", "INVITE_LINK"], "x-nullable": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "id": {"title": "ID", "type": "integer", "readOnly": true}, "password": {"title": "Password", "type": "string", "minLength": 1}, "is_active": {"title": "Active", "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.", "type": "boolean", "readOnly": true}, "marketing_consent_given": {"title": "Marketing consent given", "description": "Determines whether the user has agreed to receive marketing mails", "type": "boolean"}, "key": {"title": "Key", "type": "string", "readOnly": true}}}, "Activation": {"required": ["uid", "token"], "type": "object", "properties": {"uid": {"title": "Uid", "type": "string", "minLength": 1}, "token": {"title": "Token", "type": "string", "minLength": 1}}}, "SamlCurrentUser": {"required": ["first_name", "last_name"], "type": "object", "properties": {"first_name": {"title": "First name", "type": "string", "maxLength": 30, "minLength": 1}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150, "minLength": 1}, "sign_up_type": {"title": "Sign up type", "type": "string", "enum": ["NO_INVITE", "INVITE_EMAIL", "INVITE_LINK"], "x-nullable": true}, "id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email", "type": "string", "format": "email", "readOnly": true, "minLength": 1}, "auth_type": {"title": "Auth type", "type": "string", "readOnly": true}, "is_superuser": {"title": "Is superuser", "type": "boolean", "readOnly": true}}}, "SendEmailReset": {"required": ["email"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "minLength": 1}}}, "UsernameResetConfirm": {"required": ["new_email"], "type": "object", "properties": {"new_email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}}}, "PasswordResetConfirmRetype": {"required": ["uid", "token", "new_password", "re_new_password"], "type": "object", "properties": {"uid": {"title": "Uid", "type": "string", "minLength": 1}, "token": {"title": "Token", "type": "string", "minLength": 1}, "new_password": {"title": "New password", "type": "string", "minLength": 1}, "re_new_password": {"title": "Re new password", "type": "string", "minLength": 1}}}, "SetUsername": {"required": ["current_password", "new_email"], "type": "object", "properties": {"current_password": {"title": "Current password", "type": "string", "minLength": 1}, "new_email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}}}, "SetPasswordRetype": {"required": ["new_password", "re_new_password", "current_password"], "type": "object", "properties": {"new_password": {"title": "New password", "type": "string", "minLength": 1}, "re_new_password": {"title": "Re new password", "type": "string", "minLength": 1}, "current_password": {"title": "Current password", "type": "string", "minLength": 1}}}, "Metadata": {"required": ["model_field", "field_value"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "model_field": {"title": "Model field", "type": "integer"}, "field_value": {"title": "Field value", "type": "string", "maxLength": 2000, "minLength": 1}}}, "EnvironmentSerializerWithMetadata": {"required": ["name", "project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 2000, "minLength": 1}, "api_key": {"title": "Api key", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string", "maxLength": 20000, "x-nullable": true}, "project": {"title": "Project", "description": "Changing the project selected will remove all previous Feature States for the previously associated projects Features that are related to this Environment. New default Feature States will be created for the new selected projects Features for this Environment.", "type": "integer"}, "minimum_change_request_approvals": {"title": "Minimum change request approvals", "type": "integer", "maximum": 2147483647, "minimum": -2147483648, "x-nullable": true}, "allow_client_traits": {"title": "Allow client traits", "description": "Allows clients using the client API key to set traits.", "type": "boolean"}, "banner_text": {"title": "Banner text", "type": "string", "maxLength": 255, "x-nullable": true}, "banner_colour": {"title": "Banner colour", "description": "hex code for the banner colour", "type": "string", "maxLength": 7, "x-nullable": true}, "hide_disabled_flags": {"title": "Hide disabled flags", "description": "If true will exclude flags from SDK which are disabled. NOTE: If set, this will override the project `hide_disabled_flags`", "type": "boolean", "x-nullable": true}, "use_mv_v2_evaluation": {"title": "Use mv v2 evaluation", "description": "Enable this to have consistent multivariate evaluations across all SDKs(in local and server side mode)", "type": "boolean"}, "hide_sensitive_data": {"title": "Hide sensitive data", "description": "If true, will hide sensitive data(e.g: traits, description etc) from the SDK endpoints", "type": "boolean"}, "metadata": {"type": "array", "items": {"$ref": "#/definitions/Metadata"}}}}, "CreateUpdateEnvironment": {"required": ["name", "project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 2000, "minLength": 1}, "api_key": {"title": "Api key", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string", "maxLength": 20000, "x-nullable": true}, "project": {"title": "Project", "description": "Changing the project selected will remove all previous Feature States for the previously associated projects Features that are related to this Environment. New default Feature States will be created for the new selected projects Features for this Environment.", "type": "integer"}, "minimum_change_request_approvals": {"title": "Minimum change request approvals", "type": "integer", "readOnly": true, "maximum": 2147483647, "minimum": -2147483648, "x-nullable": true}, "allow_client_traits": {"title": "Allow client traits", "description": "Allows clients using the client API key to set traits.", "type": "boolean"}, "banner_text": {"title": "Banner text", "type": "string", "maxLength": 255, "x-nullable": true}, "banner_colour": {"title": "Banner colour", "description": "hex code for the banner colour", "type": "string", "maxLength": 7, "x-nullable": true}, "hide_disabled_flags": {"title": "Hide disabled flags", "description": "If true will exclude flags from SDK which are disabled. NOTE: If set, this will override the project `hide_disabled_flags`", "type": "boolean", "x-nullable": true}, "use_mv_v2_evaluation": {"title": "Use mv v2 evaluation", "description": "Enable this to have consistent multivariate evaluations across all SDKs(in local and server side mode)", "type": "boolean"}, "hide_sensitive_data": {"title": "Hide sensitive data", "description": "If true, will hide sensitive data(e.g: traits, description etc) from the SDK endpoints", "type": "boolean"}, "metadata": {"type": "array", "items": {"$ref": "#/definitions/Metadata"}}}}, "EdgeMultivariateFeatureStateValue": {"required": ["multivariate_feature_option", "percentage_allocation"], "type": "object", "properties": {"multivariate_feature_option": {"title": "Multivariate feature option", "type": "integer"}, "percentage_allocation": {"title": "Percentage allocation", "type": "number", "maximum": 100, "minimum": 0}}}, "EdgeIdentityWithIdentifierFeatureStateRequestBody": {"required": ["feature", "identifier"], "type": "object", "properties": {"feature_state_value": {"title": "Feature state value", "type": "string", "x-nullable": true}, "feature": {"title": "Feature", "description": "ID(integer) or name(string) of the feature", "type": "integer/string"}, "multivariate_feature_state_values": {"type": "array", "items": {"$ref": "#/definitions/EdgeMultivariateFeatureStateValue"}}, "enabled": {"title": "Enabled", "type": "boolean", "default": false}, "identity_uuid": {"title": "Identity uuid", "type": "string", "readOnly": true}, "featurestate_uuid": {"title": "Featurestate uuid", "type": "string", "readOnly": true, "minLength": 1}, "identifier": {"title": "Identifier", "type": "string", "maxLength": 2000, "minLength": 1}}}, "EdgeIdentityFeatureState": {"required": ["feature"], "type": "object", "properties": {"feature_state_value": {"title": "Feature state value", "type": "string", "x-nullable": true}, "feature": {"title": "Feature", "description": "ID(integer) or name(string) of the feature", "type": "integer/string"}, "multivariate_feature_state_values": {"type": "array", "items": {"$ref": "#/definitions/EdgeMultivariateFeatureStateValue"}}, "enabled": {"title": "Enabled", "type": "boolean", "default": false}, "identity_uuid": {"title": "Identity uuid", "type": "string", "readOnly": true}, "featurestate_uuid": {"title": "Featurestate uuid", "type": "string", "readOnly": true, "minLength": 1}}}, "EdgeIdentityWithIdentifierFeatureStateDeleteRequestBody": {"required": ["identifier", "feature"], "type": "object", "properties": {"identifier": {"title": "Identifier", "type": "string", "maxLength": 2000, "minLength": 1}, "feature": {"title": "Feature", "description": "ID(integer) or name(string) of the feature", "type": "integer/string"}}}, "PermissionModel": {"required": ["key", "description"], "type": "object", "properties": {"key": {"title": "Key", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}}}, "CloneEnvironment": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 2000, "minLength": 1}, "api_key": {"title": "Api key", "type": "string", "readOnly": true, "minLength": 1}, "project": {"title": "Project", "description": "Changing the project selected will remove all previous Feature States for the previously associated projects Features that are related to this Environment. New default Feature States will be created for the new selected projects Features for this Environment.", "type": "integer", "readOnly": true}}}, "DeleteAllTraitKeys": {"required": ["key"], "type": "object", "properties": {"key": {"title": "Key", "type": "string", "minLength": 1}}}, "UserObjectPermissions": {"required": ["permissions", "admin"], "type": "object", "properties": {"permissions": {"type": "array", "items": {"type": "string", "minLength": 1}}, "admin": {"title": "Admin", "type": "boolean"}}}, "TraitKeys": {"required": ["keys"], "type": "object", "properties": {"keys": {"type": "array", "items": {"type": "string", "minLength": 1}}}}, "EnvironmentAPIKey": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "key": {"title": "Key", "type": "string", "readOnly": true, "minLength": 1}, "active": {"title": "Active", "type": "boolean"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "expires_at": {"title": "Expires at", "type": "string", "format": "date-time", "x-nullable": true}}}, "FeatureStateValue": {"title": "Feature state value", "type": "object", "properties": {"type": {"title": "Type", "type": "string", "enum": ["int", "unicode", "bool"], "x-nullable": true}, "string_value": {"title": "String value", "type": "string", "maxLength": 20000, "x-nullable": true}, "integer_value": {"title": "Integer value", "type": "integer", "maximum": 2147483647, "minimum": -2147483648, "x-nullable": true}, "boolean_value": {"title": "Boolean value", "type": "boolean", "x-nullable": true}}}, "MultivariateFeatureStateValue": {"required": ["multivariate_feature_option", "percentage_allocation"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "multivariate_feature_option": {"title": "Multivariate feature option", "type": "integer"}, "percentage_allocation": {"title": "Percentage allocation", "type": "number", "maximum": 100, "minimum": 0}}}, "CreateChangeRequestFeatureState": {"required": ["feature"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "feature": {"title": "Feature", "type": "integer"}, "feature_segment": {"title": "Feature segment", "type": "integer", "x-nullable": true}, "enabled": {"title": "Enabled", "type": "boolean"}, "feature_state_value": {"$ref": "#/definitions/FeatureStateValue"}, "multivariate_feature_state_values": {"type": "array", "items": {"$ref": "#/definitions/MultivariateFeatureStateValue"}}, "live_from": {"title": "Live from", "type": "string", "format": "date-time", "x-nullable": true}}}, "ChangeRequestApproval": {"required": ["user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer"}, "approved_at": {"title": "Approved at", "type": "string", "format": "date-time", "readOnly": true}}}, "ChangeRequestCreate": {"required": ["title", "feature_states"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 500, "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "feature_states": {"type": "array", "items": {"$ref": "#/definitions/CreateChangeRequestFeatureState"}}, "deleted_at": {"title": "Deleted at", "type": "string", "format": "date-time", "readOnly": true}, "environment": {"title": "Environment", "type": "integer", "readOnly": true}, "committed_at": {"title": "Committed at", "type": "string", "format": "date-time", "readOnly": true}, "approvals": {"type": "array", "items": {"$ref": "#/definitions/ChangeRequestApproval"}}, "user": {"title": "User", "type": "integer", "readOnly": true}, "committed_by": {"title": "Committed by", "type": "integer", "readOnly": true}}}, "EdgeIdentity": {"required": ["identifier"], "type": "object", "properties": {"identity_uuid": {"title": "Identity uuid", "type": "string", "readOnly": true, "minLength": 1}, "identifier": {"title": "Identifier", "type": "string", "maxLength": 2000, "minLength": 1}}}, "IdentityAllFeatureStatesFeature": {"title": "Feature", "required": ["id", "name", "type"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "name": {"title": "Name", "type": "string", "minLength": 1}, "type": {"title": "Type", "type": "string", "minLength": 1}}}, "IdentityAllFeatureStatesSegment": {"title": "Segment", "required": ["id", "name"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "name": {"title": "Name", "type": "string", "minLength": 1}}}, "IdentityAllFeatureStatesMVFeatureOption": {"title": "Multivariate feature option", "type": "object", "properties": {"value": {"title": "Value", "description": "Can be any of the following types: integer, boolean, string.", "type": "string", "readOnly": true}}}, "IdentityAllFeatureStatesMVFeatureStateValue": {"required": ["multivariate_feature_option", "percentage_allocation"], "type": "object", "properties": {"multivariate_feature_option": {"$ref": "#/definitions/IdentityAllFeatureStatesMVFeatureOption"}, "percentage_allocation": {"title": "Percentage allocation", "type": "number"}}}, "IdentityAllFeatureStates": {"required": ["feature", "enabled", "multivariate_feature_state_values"], "type": "object", "properties": {"feature": {"$ref": "#/definitions/IdentityAllFeatureStatesFeature"}, "enabled": {"title": "Enabled", "type": "boolean"}, "feature_state_value": {"title": "Feature state value", "description": "Can be any of the following types: integer, boolean, string.", "type": "string", "readOnly": true}, "overridden_by": {"title": "Overridden by", "description": "One of: null, 'SEGMENT', 'IDENTITY'.", "type": "string", "readOnly": true}, "segment": {"$ref": "#/definitions/IdentityAllFeatureStatesSegment"}, "multivariate_feature_state_values": {"type": "array", "items": {"$ref": "#/definitions/IdentityAllFeatureStatesMVFeatureStateValue"}}}}, "EdgeIdentityTraits": {"required": ["trait_key", "trait_value"], "type": "object", "properties": {"trait_key": {"title": "Trait key", "type": "string", "minLength": 1}, "trait_value": {"title": "Trait value", "type": "string", "minLength": 1}}}, "CreateSegmentOverrideFeatureSegment": {"title": "Feature segment", "required": ["segment"], "type": "object", "properties": {"segment": {"title": "Segment", "type": "integer"}, "priority": {"title": "Priority", "type": "integer", "readOnly": true}}}, "CreateSegmentOverrideFeatureState": {"required": ["feature_state_value", "feature_segment"], "type": "object", "properties": {"enabled": {"title": "Enabled", "type": "boolean"}, "feature_state_value": {"$ref": "#/definitions/FeatureStateValue"}, "feature_segment": {"$ref": "#/definitions/CreateSegmentOverrideFeatureSegment"}}}, "_Identity": {"title": "Identity", "required": ["identifier"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "identifier": {"title": "Identifier", "type": "string", "maxLength": 2000, "minLength": 1}}}, "FeatureStateSerializerWithIdentity": {"required": ["identity", "feature"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "feature_state_value": {"title": "Feature state value", "type": "string", "readOnly": true}, "multivariate_feature_state_values": {"type": "array", "items": {"$ref": "#/definitions/MultivariateFeatureStateValue"}}, "identifier": {"title": "Identifier", "description": "Can be passed as an alternative to `identity`", "type": "string", "minLength": 1}, "identity": {"$ref": "#/definitions/_Identity"}, "deleted_at": {"title": "Deleted at", "type": "string", "format": "date-time", "readOnly": true}, "uuid": {"title": "Uuid", "type": "string", "format": "uuid", "readOnly": true}, "enabled": {"title": "Enabled", "type": "boolean"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "version": {"title": "Version", "type": "integer", "readOnly": true}, "live_from": {"title": "Live from", "type": "string", "format": "date-time", "x-nullable": true}, "feature": {"title": "Feature", "type": "integer"}, "environment": {"title": "Environment", "type": "integer", "x-nullable": true}, "feature_segment": {"title": "Feature segment", "type": "integer", "x-nullable": true}, "change_request": {"title": "Change request", "type": "integer", "x-nullable": true}}}, "FeatureStateSerializerBasic": {"required": ["feature"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "feature_state_value": {"title": "Feature state value", "type": "string", "readOnly": true}, "multivariate_feature_state_values": {"type": "array", "items": {"$ref": "#/definitions/MultivariateFeatureStateValue"}}, "identifier": {"title": "Identifier", "description": "Can be passed as an alternative to `identity`", "type": "string", "minLength": 1}, "deleted_at": {"title": "Deleted at", "type": "string", "format": "date-time", "readOnly": true}, "uuid": {"title": "Uuid", "type": "string", "format": "uuid", "readOnly": true}, "enabled": {"title": "Enabled", "type": "boolean"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "version": {"title": "Version", "type": "integer", "readOnly": true}, "live_from": {"title": "Live from", "type": "string", "format": "date-time", "x-nullable": true}, "feature": {"title": "Feature", "type": "integer"}, "environment": {"title": "Environment", "type": "integer", "x-nullable": true}, "identity": {"title": "Identity", "type": "integer", "x-nullable": true}, "feature_segment": {"title": "Feature segment", "type": "integer", "x-nullable": true}, "change_request": {"title": "Change request", "type": "integer", "x-nullable": true}}}, "FeatureStateSerializerCreate": {"required": ["feature"], "type": "object", "properties": {"feature": {"title": "Feature", "type": "integer"}, "enabled": {"title": "Enabled", "type": "boolean"}}}, "Identity": {"required": ["identifier"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "identifier": {"title": "Identifier", "type": "string", "maxLength": 2000, "minLength": 1}, "environment": {"title": "Environment", "type": "integer", "readOnly": true}}}, "Trait": {"required": ["trait_key"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "trait_key": {"title": "Trait key", "type": "string", "maxLength": 200, "minLength": 1}, "value_type": {"title": "Value type", "type": "string", "enum": ["int", "unicode", "bool", "float"], "x-nullable": true}, "integer_value": {"title": "Integer value", "type": "integer", "maximum": 2147483647, "minimum": -2147483648, "x-nullable": true}, "string_value": {"title": "String value", "type": "string", "maxLength": 2000, "x-nullable": true}, "boolean_value": {"title": "Boolean value", "type": "boolean", "x-nullable": true}, "float_value": {"title": "Float value", "type": "number", "x-nullable": true}, "created_date": {"title": "DateCreated", "type": "string", "format": "date-time", "readOnly": true}}}, "AmplitudeConfiguration": {"required": ["api_key"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "api_key": {"title": "Api key", "type": "string", "maxLength": 100, "minLength": 1}}}, "DynatraceConfiguration": {"required": ["api_key", "entity_selector"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "base_url": {"title": "Base url", "type": "string", "format": "uri", "maxLength": 200, "minLength": 1, "x-nullable": true}, "api_key": {"title": "Api key", "type": "string", "maxLength": 100, "minLength": 1}, "entity_selector": {"title": "Entity selector", "type": "string", "maxLength": 1000, "minLength": 1}}}, "HeapConfiguration": {"required": ["api_key"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "api_key": {"title": "Api key", "type": "string", "maxLength": 100, "minLength": 1}}}, "MixpanelConfiguration": {"required": ["api_key"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "api_key": {"title": "Api key", "type": "string", "maxLength": 100, "minLength": 1}}}, "RudderstackConfiguration": {"required": ["api_key"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "base_url": {"title": "Base url", "type": "string", "format": "uri", "maxLength": 200, "minLength": 1, "x-nullable": true}, "api_key": {"title": "Api key", "type": "string", "maxLength": 100, "minLength": 1}}}, "SegmentConfiguration": {"required": ["api_key"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "api_key": {"title": "Api key", "type": "string", "maxLength": 100, "minLength": 1}}}, "SlackChannel": {"required": ["channel_name", "channel_id"], "type": "object", "properties": {"channel_name": {"title": "Channel name", "type": "string", "minLength": 1}, "channel_id": {"title": "Channel id", "type": "string", "minLength": 1}}}, "SlackChannelList": {"required": ["cursor", "channels"], "type": "object", "properties": {"cursor": {"title": "Cursor", "type": "string", "minLength": 1}, "channels": {"type": "array", "items": {"$ref": "#/definitions/SlackChannel"}}}}, "SlackEnvironment": {"required": ["channel_id"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "channel_id": {"title": "Channel id", "description": "Id of the slack channel to post messages to", "type": "string", "maxLength": 50, "minLength": 1}, "enabled": {"title": "Enabled", "type": "boolean"}}}, "WebhookConfiguration": {"required": ["url"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "url": {"title": "Url", "type": "string", "format": "uri", "maxLength": 200, "minLength": 1}, "secret": {"title": "Secret", "type": "string", "maxLength": 255}}}, "ChangeRequestList": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "title": {"title": "Title", "type": "string", "readOnly": true, "minLength": 1}, "description": {"title": "Description", "type": "string", "readOnly": true, "minLength": 1}, "user": {"title": "User", "type": "integer", "readOnly": true}, "committed_at": {"title": "Committed at", "type": "string", "format": "date-time", "readOnly": true}, "committed_by": {"title": "Committed by", "type": "integer", "readOnly": true}, "deleted_at": {"title": "Deleted at", "type": "string", "format": "date-time", "readOnly": true}, "live_from": {"title": "Live from", "type": "string", "format": "date-time", "readOnly": true}}}, "UserPermissionGroupMembership": {"required": ["email", "first_name", "last_name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "first_name": {"title": "First name", "type": "string", "maxLength": 30, "minLength": 1}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150, "minLength": 1}, "last_login": {"title": "Last login", "type": "string", "format": "date-time", "x-nullable": true}, "group_admin": {"title": "Group admin", "type": "boolean", "readOnly": true}}}, "UserPermissionGroupSerializerDetail": {"title": "Group", "required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 200, "minLength": 1}, "users": {"type": "array", "items": {"$ref": "#/definitions/UserPermissionGroupMembership"}, "readOnly": true}, "is_default": {"title": "Is default", "description": "If set to true, all new users will be added to this group", "type": "boolean"}, "external_id": {"title": "External id", "description": "Unique ID of the group in an external system", "type": "string", "maxLength": 255, "x-nullable": true}}}, "ListUserPermissionGroupEnvironmentPermission": {"required": ["group"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "permissions": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}, "admin": {"title": "Admin", "type": "boolean"}, "group": {"$ref": "#/definitions/UserPermissionGroupSerializerDetail"}}}, "CreateUpdateUserPermissionGroupEnvironmentPermission": {"required": ["group"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "permissions": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}, "admin": {"title": "Admin", "type": "boolean"}, "group": {"title": "Group", "type": "integer"}}}, "ListUserEnvironmentPermission": {"required": ["user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "permissions": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}, "admin": {"title": "Admin", "type": "boolean"}, "user": {"$ref": "#/definitions/UserList"}}}, "CreateUpdateUserEnvironmentPermission": {"required": ["user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "permissions": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}, "admin": {"title": "Admin", "type": "boolean"}, "user": {"title": "User", "type": "integer"}}}, "Webhook": {"required": ["url"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "url": {"title": "Url", "type": "string", "format": "uri", "maxLength": 200, "minLength": 1}, "enabled": {"title": "Enabled", "type": "boolean"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "secret": {"title": "Secret", "type": "string", "maxLength": 255}}}, "FeatureSegmentList": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "uuid": {"title": "Uuid", "type": "string", "format": "uuid", "readOnly": true}, "segment": {"title": "Segment", "type": "integer", "readOnly": true}, "priority": {"title": "Priority", "type": "integer", "readOnly": true}, "environment": {"title": "Environment", "type": "integer", "readOnly": true}, "segment_name": {"title": "Segment name", "type": "string", "readOnly": true}, "is_feature_specific": {"title": "Is feature specific", "type": "boolean", "readOnly": true}}}, "FeatureSegmentCreate": {"required": ["feature", "segment", "environment"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "uuid": {"title": "Uuid", "type": "string", "format": "uuid", "readOnly": true}, "feature": {"title": "Feature", "type": "integer"}, "segment": {"title": "Segment", "type": "integer"}, "environment": {"title": "Environment", "type": "integer"}, "priority": {"title": "Priority", "type": "integer", "readOnly": true}}}, "FeatureSegmentChangePriorities": {"required": ["id", "priority"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "priority": {"title": "Priority", "description": "Value to change the feature segment's priority to.", "type": "integer", "minimum": 0}}}, "WritableNestedFeatureState": {"required": ["feature", "environment"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "feature_state_value": {"$ref": "#/definitions/FeatureStateValue"}, "multivariate_feature_state_values": {"type": "array", "items": {"$ref": "#/definitions/MultivariateFeatureStateValue"}}, "identifier": {"title": "Identifier", "description": "Can be passed as an alternative to `identity`", "type": "string", "minLength": 1}, "deleted_at": {"title": "Deleted at", "type": "string", "format": "date-time", "readOnly": true}, "uuid": {"title": "Uuid", "type": "string", "format": "uuid", "readOnly": true}, "enabled": {"title": "Enabled", "type": "boolean"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "version": {"title": "Version", "type": "integer", "readOnly": true}, "live_from": {"title": "Live from", "type": "string", "format": "date-time", "x-nullable": true}, "feature": {"title": "Feature", "type": "integer"}, "environment": {"title": "Environment", "type": "integer"}, "identity": {"title": "Identity", "type": "integer", "x-nullable": true}, "feature_segment": {"title": "Feature segment", "type": "integer", "x-nullable": true}, "change_request": {"title": "Change request", "type": "integer", "x-nullable": true}}}, "NestedMultivariateFeatureOption": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "uuid": {"title": "Uuid", "type": "string", "format": "uuid", "readOnly": true}, "type": {"title": "Type", "type": "string", "enum": ["int", "unicode", "bool"], "x-nullable": true}, "integer_value": {"title": "Integer value", "type": "integer", "maximum": 2147483647, "minimum": -2147483648, "x-nullable": true}, "string_value": {"title": "String value", "type": "string", "maxLength": 20000, "x-nullable": true}, "boolean_value": {"title": "Boolean value", "type": "boolean", "x-nullable": true}, "default_percentage_allocation": {"title": "Default percentage allocation", "type": "number", "maximum": 100, "minimum": 0}}}, "ListCreateFeature": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 2000, "minLength": 1}, "type": {"title": "Type", "type": "string", "maxLength": 50}, "default_enabled": {"title": "Default enabled", "type": "boolean"}, "initial_value": {"title": "Initial value", "type": "string", "maxLength": 20000, "x-nullable": true}, "created_date": {"title": "DateCreated", "type": "string", "format": "date-time", "readOnly": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "tags": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}, "multivariate_options": {"type": "array", "items": {"$ref": "#/definitions/NestedMultivariateFeatureOption"}}, "is_archived": {"title": "Is archived", "type": "boolean"}, "owners": {"type": "array", "items": {"$ref": "#/definitions/UserList"}, "readOnly": true}, "uuid": {"title": "Uuid", "type": "string", "format": "uuid", "readOnly": true}, "project": {"title": "Project", "description": "Changing the project selected will remove previous Feature States for the previouslyassociated projects Environments that are related to this Feature. New default Feature States will be created for the new selected projects Environments for this Feature. Also this will remove any Tags associated with a feature as Tags are Project defined", "type": "integer", "readOnly": true}, "num_segment_overrides": {"title": "Num segment overrides", "description": "Number of segment overrides that exist for the given feature in the environment provided by the `environment` query parameter.", "type": "integer", "readOnly": true}, "num_identity_overrides": {"title": "Num identity overrides", "description": "Number of identity overrides that exist for the given feature in the environment provided by the `environment` query parameter. Note: will return null for Edge enabled projects.", "type": "integer", "readOnly": true}}}, "ChangeRequestRetrieve": {"required": ["feature_states", "approvals"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "environment": {"title": "Environment", "type": "integer", "readOnly": true}, "title": {"title": "Title", "type": "string", "readOnly": true, "minLength": 1}, "description": {"title": "Description", "type": "string", "readOnly": true, "minLength": 1}, "feature_states": {"type": "array", "items": {"$ref": "#/definitions/CreateChangeRequestFeatureState"}}, "user": {"title": "User", "type": "integer", "readOnly": true}, "committed_at": {"title": "Committed at", "type": "string", "format": "date-time", "readOnly": true}, "committed_by": {"title": "Committed by", "type": "integer", "readOnly": true}, "deleted_at": {"title": "Deleted at", "type": "string", "format": "date-time", "readOnly": true}, "approvals": {"type": "array", "items": {"$ref": "#/definitions/ChangeRequestApproval"}}, "is_approved": {"title": "Is approved", "type": "string", "readOnly": true}, "is_committed": {"title": "Is committed", "type": "string", "readOnly": true}}}, "UpdateChangeRequestFeatureState": {"required": ["feature"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "feature": {"title": "Feature", "type": "integer"}, "feature_segment": {"title": "Feature segment", "type": "integer", "x-nullable": true}, "enabled": {"title": "Enabled", "type": "boolean"}, "feature_state_value": {"$ref": "#/definitions/FeatureStateValue"}, "multivariate_feature_state_values": {"type": "array", "items": {"$ref": "#/definitions/MultivariateFeatureStateValue"}}, "live_from": {"title": "Live from", "type": "string", "format": "date-time", "x-nullable": true}}}, "ChangeRequestUpdate": {"required": ["title", "feature_states"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 500, "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "feature_states": {"type": "array", "items": {"$ref": "#/definitions/UpdateChangeRequestFeatureState"}}, "deleted_at": {"title": "Deleted at", "type": "string", "format": "date-time", "readOnly": true}, "environment": {"title": "Environment", "type": "integer", "readOnly": true}, "committed_at": {"title": "Committed at", "type": "string", "format": "date-time", "readOnly": true}, "approvals": {"type": "array", "items": {"$ref": "#/definitions/ChangeRequestApproval"}}, "user": {"title": "User", "type": "integer", "readOnly": true}, "committed_by": {"title": "Committed by", "type": "integer", "readOnly": true}}}, "Feature": {"title": "Feature", "required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 2000, "minLength": 1}, "created_date": {"title": "DateCreated", "type": "string", "format": "date-time", "readOnly": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "initial_value": {"title": "Initial value", "type": "string", "maxLength": 20000, "x-nullable": true}, "default_enabled": {"title": "Default enabled", "type": "boolean"}, "type": {"title": "Type", "type": "string", "maxLength": 50}}}, "FeatureStateSerializerFull": {"required": ["feature"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "feature": {"$ref": "#/definitions/Feature"}, "feature_state_value": {"title": "Feature state value", "type": "string", "readOnly": true}, "environment": {"title": "Environment", "type": "integer", "x-nullable": true}, "identity": {"title": "Identity", "type": "integer", "x-nullable": true}, "feature_segment": {"title": "Feature segment", "type": "integer", "x-nullable": true}, "enabled": {"title": "Enabled", "type": "boolean"}}}, "SDKFeature": {"title": "Feature", "required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 2000, "minLength": 1}, "created_date": {"title": "DateCreated", "type": "string", "format": "date-time", "readOnly": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "initial_value": {"title": "Initial value", "type": "string", "maxLength": 20000, "x-nullable": true}, "default_enabled": {"title": "Default enabled", "type": "boolean"}, "type": {"title": "Type", "type": "string", "maxLength": 50}}}, "SDKFeatureState": {"required": ["feature"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "feature": {"$ref": "#/definitions/SDKFeature"}, "feature_state_value": {"title": "Feature state value", "type": "string", "readOnly": true}, "environment": {"title": "Environment", "type": "integer", "x-nullable": true}, "identity": {"title": "Identity", "type": "integer", "x-nullable": true}, "feature_segment": {"title": "Feature segment", "type": "integer", "x-nullable": true}, "enabled": {"title": "Enabled", "type": "boolean"}}}, "_Trait": {"required": ["trait_key", "trait_value"], "type": "object", "properties": {"trait_key": {"title": "Trait key", "type": "string", "minLength": 1}, "trait_value": {"title": "Trait value", "description": "Can be of type string, boolean, float or integer.", "type": "string"}}}, "SDKIdentitiesResponse": {"required": ["flags", "traits"], "type": "object", "properties": {"flags": {"type": "array", "items": {"$ref": "#/definitions/SDKFeatureState"}}, "traits": {"type": "array", "items": {"$ref": "#/definitions/_Trait"}}}}, "TraitSerializerBasic": {"required": ["trait_key", "trait_value"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "trait_key": {"title": "Trait key", "type": "string", "maxLength": 200, "minLength": 1}, "trait_value": {"title": "Trait value", "type": "string"}}}, "IdentifyWithTraits": {"required": ["identifier"], "type": "object", "properties": {"identifier": {"title": "Identifier", "type": "string", "minLength": 1}, "traits": {"type": "array", "items": {"$ref": "#/definitions/TraitSerializerBasic"}}, "flags": {"type": "array", "items": {"$ref": "#/definitions/SDKFeatureState"}, "readOnly": true}}}, "MetadataField": {"required": ["name", "organisation"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "type": {"title": "Type", "type": "string", "enum": ["int", "str", "bool", "url", "multiline_str"]}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "organisation": {"title": "Organisation", "type": "integer"}}}, "MultivariateFeatureOption": {"required": ["feature"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "uuid": {"title": "Uuid", "type": "string", "format": "uuid", "readOnly": true}, "type": {"title": "Type", "type": "string", "enum": ["int", "unicode", "bool"], "x-nullable": true}, "integer_value": {"title": "Integer value", "type": "integer", "maximum": 2147483647, "minimum": -2147483648, "x-nullable": true}, "string_value": {"title": "String value", "type": "string", "maxLength": 20000, "x-nullable": true}, "boolean_value": {"title": "Boolean value", "type": "boolean", "x-nullable": true}, "default_percentage_allocation": {"title": "Default percentage allocation", "type": "number", "maximum": 100, "minimum": 0}, "feature": {"title": "Feature", "type": "integer"}}}, "Subscription": {"title": "Subscription", "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "deleted_at": {"title": "Deleted at", "type": "string", "format": "date-time", "readOnly": true}, "uuid": {"title": "Uuid", "type": "string", "format": "uuid", "readOnly": true}, "subscription_id": {"title": "Subscription id", "type": "string", "maxLength": 100, "x-nullable": true}, "subscription_date": {"title": "Subscription date", "type": "string", "format": "date-time", "x-nullable": true}, "plan": {"title": "Plan", "type": "string", "maxLength": 100, "x-nullable": true}, "max_seats": {"title": "Max seats", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "max_api_calls": {"title": "Max api calls", "type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format":"int64"}, "cancellation_date": {"title": "Cancellation date", "type": "string", "format": "date-time", "x-nullable": true}, "customer_id": {"title": "Customer id", "type": "string", "maxLength": 100, "x-nullable": true}, "payment_method": {"title": "Payment method", "type": "string", "enum": ["CHARGEBEE", "XERO"], "x-nullable": true}, "notes": {"title": "Notes", "type": "string", "maxLength": 500, "x-nullable": true}}}, "OrganisationSerializerFull": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 2000, "minLength": 1}, "created_date": {"title": "DateCreated", "type": "string", "format": "date-time", "readOnly": true}, "webhook_notification_email": {"title": "Webhook notification email", "type": "string", "format": "email", "maxLength": 254, "x-nullable": true}, "num_seats": {"title": "Num seats", "type": "string", "readOnly": true}, "subscription": {"$ref": "#/definitions/Subscription"}, "role": {"title": "Role", "type": "string", "readOnly": true}, "persist_trait_data": {"title": "Persist trait data", "description": "Disable this if you don't want Flagsmith to store trait data for this org's identities.", "type": "boolean", "readOnly": true}, "block_access_to_admin": {"title": "Block access to admin", "description": "Enable this to block all the access to admin interface for the organisation", "type": "boolean", "readOnly": true}, "restrict_project_create_to_admin": {"title": "Restrict project create to admin", "type": "boolean"}}}, "GetHostedPageForSubscriptionUpgrade": {"required": ["plan_id", "subscription_id"], "type": "object", "properties": {"plan_id": {"title": "Plan id", "type": "string", "minLength": 1}, "subscription_id": {"title": "Subscription id", "type": "string", "minLength": 1}, "url": {"title": "Url", "type": "string", "format": "uri", "readOnly": true, "minLength": 1}}}, "SubscriptionDetails": {"required": ["max_seats", "max_api_calls", "max_projects", "payment_source"], "type": "object", "properties": {"max_seats": {"title": "Max seats", "type": "integer"}, "max_api_calls": {"title": "Max api calls", "type": "integer"}, "max_projects": {"title": "Max projects", "type": "integer"}, "payment_source": {"title": "Payment source", "type": "string", "enum": [null, "CHARGEBEE"]}}}, "InfluxData": {"required": ["events_list"], "type": "object", "properties": {"events_list": {"type": "array", "items": {"type": "object", "additionalProperties": {"type": "string"}}}}}, "Invite": {"required": ["email"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "role": {"title": "Role", "type": "string", "enum": ["ADMIN", "USER"]}, "date_created": {"title": "DateCreated", "type": "string", "format": "date-time", "readOnly": true}, "permission_groups": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}}}, "MultiInvites": {"type": "object", "properties": {"invites": {"type": "array", "items": {"$ref": "#/definitions/Invite"}}, "emails": {"type": "array", "items": {"type": "string", "format": "email", "minLength": 1}}}}, "PortalUrl": {"required": ["url"], "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "minLength": 1}}}, "UserId": {"required": ["id"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}}}, "UpdateSubscription": {"required": ["hosted_page_id"], "type": "object", "properties": {"hosted_page_id": {"title": "Hosted page id", "type": "string", "minLength": 1}}}, "ListUserPermissionGroupMembership": {"required": ["email", "first_name", "last_name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "first_name": {"title": "First name", "type": "string", "maxLength": 30, "minLength": 1}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150, "minLength": 1}, "last_login": {"title": "Last login", "type": "string", "format": "date-time", "x-nullable": true}}}, "ListUserPermissionGroup": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 200, "minLength": 1}, "users": {"type": "array", "items": {"$ref": "#/definitions/ListUserPermissionGroupMembership"}, "readOnly": true}, "is_default": {"title": "Is default", "description": "If set to true, all new users will be added to this group", "type": "boolean"}, "external_id": {"title": "External id", "description": "Unique ID of the group in an external system", "type": "string", "maxLength": 255, "x-nullable": true}}}, "UserIds": {"required": ["user_ids"], "type": "object", "properties": {"user_ids": {"type": "array", "items": {"type": "integer"}}}}, "InviteLink": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "hash": {"title": "Hash", "type": "string", "readOnly": true, "minLength": 1}, "date_created": {"title": "DateCreated", "type": "string", "format": "date-time", "readOnly": true}, "role": {"title": "Role", "type": "string", "enum": ["ADMIN", "USER"]}, "expires_at": {"title": "Expires at", "description": "Datetime that the invite link will cease to be active. Leave blank to enable indefinitely.", "type": "string", "format": "date-time", "x-nullable": true}}}, "InviteList": {"required": ["email", "invited_by"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "date_created": {"title": "DateCreated", "type": "string", "format": "date-time", "readOnly": true}, "invited_by": {"$ref": "#/definitions/UserList"}, "permission_groups": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}}}, "MasterAPIKey": {"type": "object", "properties": {"prefix": {"title": "Prefix", "type": "string", "readOnly": true, "minLength": 1}, "created": {"title": "Created", "type": "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name", "description": "A free-form name for the API key. Need not be unique. 50 characters max.", "type": "string", "maxLength": 50, "minLength": 1}, "revoked": {"title": "Revoked", "description": "If the API key is revoked, clients cannot use it anymore. (This cannot be undone.)", "type": "boolean"}, "expiry_date": {"title": "Expires", "description": "Once API key expires, clients cannot use it anymore.", "type": "string", "format": "date-time", "x-nullable": true}, "key": {"title": "Key", "description": "Since we don't store the api key itself(i.e: we only store the hash) this key will be none for every endpoint apart from create", "type": "string", "readOnly": true, "minLength": 1}}}, "MetadataModelFieldRequirement": {"required": ["content_type", "object_id"], "type": "object", "properties": {"content_type": {"title": "Content type", "type": "integer"}, "object_id": {"title": "Object id", "type": "integer", "maximum": 2147483647, "minimum": 0}}}, "MetaDataModelField": {"required": ["field", "content_type"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "field": {"title": "Field", "type": "integer"}, "content_type": {"title": "Content type", "type": "integer"}, "is_required_for": {"type": "array", "items": {"$ref": "#/definitions/MetadataModelFieldRequirement"}}}}, "ContentType": {"required": ["app_label", "model"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "app_label": {"title": "App label", "type": "string", "maxLength": 100, "minLength": 1}, "model": {"title": "Python model class name", "type": "string", "maxLength": 100, "minLength": 1}}}, "UsageData": {"required": ["flags", "identities", "traits", "environment_document", "day"], "type": "object", "properties": {"flags": {"title": "Flags", "type": "integer"}, "identities": {"title": "Identities", "type": "integer"}, "traits": {"title": "Traits", "type": "integer"}, "environment_document": {"title": "Environment document", "type": "integer"}, "day": {"title": "Day", "type": "string", "minLength": 1}}}, "UsageTotalCount": {"required": ["count"], "type": "object", "properties": {"count": {"title": "Count", "type": "integer"}}}, "UserPermissionGroup": {"title": "Group", "required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 200, "minLength": 1}, "users": {"type": "array", "items": {"type": "integer"}, "readOnly": true, "uniqueItems": true}, "is_default": {"title": "Is default", "description": "If set to true, all new users will be added to this group", "type": "boolean"}, "external_id": {"title": "External id", "description": "Unique ID of the group in an external system", "type": "string", "maxLength": 255, "x-nullable": true}}}, "UserPermissionGroupOrganisationPermissionList": {"required": ["group"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "group": {"$ref": "#/definitions/UserPermissionGroup"}, "permissions": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}}}, "UserPermissionGroupOrganisationPermissionUpdateCreate": {"required": ["group"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "group": {"title": "Group", "type": "integer"}, "permissions": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}}}, "UserOrganisationPermissionList": {"required": ["user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"$ref": "#/definitions/UserList"}, "permissions": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}}}, "UserOrganisationPermissionUpdateCreate": {"required": ["user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer"}, "permissions": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}}}, "OrganisationSerializerBasic": {"title": "Organisation", "required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 2000, "minLength": 1}}}, "UserOrganisation": {"required": ["role"], "type": "object", "properties": {"role": {"title": "Role", "type": "string", "enum": ["ADMIN", "USER"]}, "organisation": {"$ref": "#/definitions/OrganisationSerializerBasic"}}}, "OrganisationWebhook": {"required": ["url"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "url": {"title": "Url", "type": "string", "format": "uri", "maxLength": 200, "minLength": 1}, "enabled": {"title": "Enabled", "type": "boolean"}, "secret": {"title": "Secret", "type": "string", "maxLength": 255}}}, "UpdateFeature": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "readOnly": true, "minLength": 1}, "type": {"title": "Type", "type": "string", "maxLength": 50}, "default_enabled": {"title": "Default enabled", "type": "boolean", "readOnly": true}, "initial_value": {"title": "Initial value", "type": "string", "readOnly": true, "minLength": 1}, "created_date": {"title": "DateCreated", "type": "string", "format": "date-time", "readOnly": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "tags": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}, "multivariate_options": {"type": "array", "items": {"$ref": "#/definitions/NestedMultivariateFeatureOption"}}, "is_archived": {"title": "Is archived", "type": "boolean"}, "owners": {"type": "array", "items": {"$ref": "#/definitions/UserList"}, "readOnly": true}, "uuid": {"title": "Uuid", "type": "string", "format": "uuid", "readOnly": true}, "project": {"title": "Project", "description": "Changing the project selected will remove previous Feature States for the previouslyassociated projects Environments that are related to this Feature. New default Feature States will be created for the new selected projects Environments for this Feature. Also this will remove any Tags associated with a feature as Tags are Project defined", "type": "integer", "readOnly": true}, "num_segment_overrides": {"title": "Num segment overrides", "description": "Number of segment overrides that exist for the given feature in the environment provided by the `environment` query parameter.", "type": "integer", "readOnly": true}, "num_identity_overrides": {"title": "Num identity overrides", "description": "Number of identity overrides that exist for the given feature in the environment provided by the `environment` query parameter. Note: will return null for Edge enabled projects.", "type": "integer", "readOnly": true}}}, "FeatureOwnerInput": {"required": ["user_ids"], "type": "object", "properties": {"user_ids": {"type": "array", "items": {"type": "integer"}}}}, "ProjectFeature": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 2000, "minLength": 1}, "created_date": {"title": "DateCreated", "type": "string", "format": "date-time", "readOnly": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "initial_value": {"title": "Initial value", "type": "string", "maxLength": 20000, "x-nullable": true}, "default_enabled": {"title": "Default enabled", "type": "boolean"}, "type": {"title": "Type", "type": "string", "maxLength": 50}, "owners": {"type": "array", "items": {"$ref": "#/definitions/UserList"}, "readOnly": true}}}, "FeatureEvaluationData": {"required": ["day", "count"], "type": "object", "properties": {"day": {"title": "Day", "type": "string", "minLength": 1}, "count": {"title": "Count", "type": "integer"}}}, "FeatureInfluxData": {"required": ["events_list"], "type": "object", "properties": {"events_list": {"type": "array", "items": {"type": "object", "additionalProperties": {"type": "string"}}}}}, "DataDogConfiguration": {"required": ["base_url", "api_key"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "base_url": {"title": "Base url", "type": "string", "format": "uri", "maxLength": 200, "minLength": 1}, "api_key": {"title": "Api key", "type": "string", "maxLength": 100, "minLength": 1}}}, "NewRelicConfiguration": {"required": ["api_key", "app_id"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "base_url": {"title": "Base url", "type": "string", "format": "uri", "maxLength": 200, "minLength": 1, "x-nullable": true}, "api_key": {"title": "Api key", "type": "string", "maxLength": 100, "minLength": 1}, "app_id": {"title": "App id", "type": "string", "maxLength": 100, "minLength": 1}}}, "Condition": {"required": ["operator"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "operator": {"title": "Operator", "type": "string", "enum": ["EQUAL", "GREATER_THAN", "LESS_THAN", "CONTAINS", "GREATER_THAN_INCLUSIVE", "LESS_THAN_INCLUSIVE", "NOT_CONTAINS", "NOT_EQUAL", "REGEX", "PERCENTAGE_SPLIT", "MODULO", "IS_SET", "IS_NOT_SET", "IN"]}, "property": {"title": "Property", "type": "string", "maxLength": 1000, "x-nullable": true}, "value": {"title": "Value", "type": "string", "maxLength": 1000, "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "delete": {"title": "Delete", "type": "boolean"}}}, "Rule": {"required": ["type"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "type": {"title": "Type", "type": "string", "enum": ["ALL", "ANY", "NONE"]}, "rules": {"type": "array", "items": {"$ref": "#/definitions/Rule"}}, "conditions": {"type": "array", "items": {"$ref": "#/definitions/Condition"}}, "delete": {"title": "Delete", "type": "boolean"}}}, "Segment": {"required": ["rules", "name", "project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "rules": {"type": "array", "items": {"$ref": "#/definitions/Rule"}}, "deleted_at": {"title": "Deleted at", "type": "string", "format": "date-time", "readOnly": true}, "uuid": {"title": "Uuid", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 2000, "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "project": {"title": "Project", "type": "integer"}, "feature": {"title": "Feature", "type": "integer", "x-nullable": true}}}, "SegmentAssociatedFeatureState": {"required": ["feature"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "feature": {"title": "Feature", "type": "integer"}, "environment": {"title": "Environment", "type": "integer", "x-nullable": true}}}, "Tag": {"required": ["label", "color"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "label": {"title": "Label", "type": "string", "maxLength": 100, "minLength": 1}, "color": {"title": "Color", "description": "Hexadecimal value of the tag color", "type": "string", "maxLength": 10, "minLength": 1}, "description": {"title": "Description", "type": "string", "maxLength": 512, "x-nullable": true}, "project": {"title": "Project", "type": "integer", "readOnly": true}}}, "ListUserPermissionGroupProjectPermission": {"required": ["group"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "permissions": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}, "admin": {"title": "Admin", "type": "boolean"}, "group": {"$ref": "#/definitions/UserPermissionGroup"}}}, "CreateUpdateUserPermissionGroupProjectPermission": {"required": ["group"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "permissions": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}, "admin": {"title": "Admin", "type": "boolean"}, "group": {"title": "Group", "type": "integer"}}}, "ListUserProjectPermission": {"required": ["user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "permissions": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}, "admin": {"title": "Admin", "type": "boolean"}, "user": {"$ref": "#/definitions/UserList"}}}, "CreateUpdateUserProjectPermission": {"required": ["user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "permissions": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}, "admin": {"title": "Admin", "type": "boolean"}, "user": {"title": "User", "type": "integer"}}}, "IdentifierOnlyIdentity": {"title": "Identity", "required": ["identifier"], "type": "object", "properties": {"identifier": {"title": "Identifier", "type": "string", "maxLength": 2000, "minLength": 1}}}, "SDKCreateUpdateTrait": {"required": ["identity", "trait_value", "trait_key"], "type": "object", "properties": {"identity": {"$ref": "#/definitions/IdentifierOnlyIdentity"}, "trait_value": {"title": "Trait value", "type": "string"}, "trait_key": {"title": "Trait key", "type": "string", "minLength": 1}}}, "IncrementTraitValue": {"required": ["trait_key", "increment_by", "identifier"], "type": "object", "properties": {"trait_key": {"title": "Trait key", "type": "string", "minLength": 1}, "increment_by": {"title": "Increment by", "type": "integer"}, "identifier": {"title": "Identifier", "type": "string", "minLength": 1}, "trait_value": {"title": "Trait value", "type": "integer", "readOnly": true}}}, "Monitoring": {"type": "object", "properties": {"waiting": {"title": "Waiting", "type": "integer", "readOnly": true}}}}}